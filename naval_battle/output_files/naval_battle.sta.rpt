TimeQuest Timing Analyzer report for naval_battle
Tue Dec 12 16:35:10 2023
Quartus II 64-Bit Version 13.0.0 Build 156 04/24/2013 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'key[0]'
 12. Slow Model Setup: 'current_state.A'
 13. Slow Model Hold: 'current_state.A'
 14. Slow Model Hold: 'key[0]'
 15. Slow Model Minimum Pulse Width: 'key[0]'
 16. Slow Model Minimum Pulse Width: 'current_state.A'
 17. Setup Times
 18. Hold Times
 19. Clock to Output Times
 20. Minimum Clock to Output Times
 21. Fast Model Setup Summary
 22. Fast Model Hold Summary
 23. Fast Model Recovery Summary
 24. Fast Model Removal Summary
 25. Fast Model Minimum Pulse Width Summary
 26. Fast Model Setup: 'key[0]'
 27. Fast Model Setup: 'current_state.A'
 28. Fast Model Hold: 'current_state.A'
 29. Fast Model Hold: 'key[0]'
 30. Fast Model Minimum Pulse Width: 'key[0]'
 31. Fast Model Minimum Pulse Width: 'current_state.A'
 32. Setup Times
 33. Hold Times
 34. Clock to Output Times
 35. Minimum Clock to Output Times
 36. Multicorner Timing Analysis Summary
 37. Setup Times
 38. Hold Times
 39. Clock to Output Times
 40. Minimum Clock to Output Times
 41. Setup Transfers
 42. Hold Transfers
 43. Report TCCS
 44. Report RSKM
 45. Unconstrained Paths
 46. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                       ;
+--------------------+----------------------------------------------------+
; Quartus II Version ; Version 13.0.0 Build 156 04/24/2013 SJ Web Edition ;
; Revision Name      ; naval_battle                                       ;
; Device Family      ; Cyclone II                                         ;
; Device Name        ; EP2C20F484C7                                       ;
; Timing Models      ; Final                                              ;
; Delay Model        ; Combined                                           ;
; Rise/Fall Delays   ; Unavailable                                        ;
+--------------------+----------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 8      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                           ;
+-----------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------------------+
; Clock Name      ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets             ;
+-----------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------------------+
; current_state.A ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { current_state.A } ;
; key[0]          ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { key[0] }          ;
+-----------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------------------+


+--------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                  ;
+------------+-----------------+-----------------+-------------------------+
; Fmax       ; Restricted Fmax ; Clock Name      ; Note                    ;
+------------+-----------------+-----------------+-------------------------+
; INF MHz    ; 121.71 MHz      ; current_state.A ; limit due to hold check ;
; 195.35 MHz ; 195.35 MHz      ; key[0]          ;                         ;
+------------+-----------------+-----------------+-------------------------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+------------------------------------------+
; Slow Model Setup Summary                 ;
+-----------------+--------+---------------+
; Clock           ; Slack  ; End Point TNS ;
+-----------------+--------+---------------+
; key[0]          ; -4.119 ; -392.562      ;
; current_state.A ; -2.523 ; -19.473       ;
+-----------------+--------+---------------+


+------------------------------------------+
; Slow Model Hold Summary                  ;
+-----------------+--------+---------------+
; Clock           ; Slack  ; End Point TNS ;
+-----------------+--------+---------------+
; current_state.A ; -4.108 ; -29.505       ;
; key[0]          ; -2.406 ; -108.129      ;
+-----------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+------------------------------------------+
; Slow Model Minimum Pulse Width Summary   ;
+-----------------+--------+---------------+
; Clock           ; Slack  ; End Point TNS ;
+-----------------+--------+---------------+
; key[0]          ; -1.469 ; -149.331      ;
; current_state.A ; 0.500  ; 0.000         ;
+-----------------+--------+---------------+


+----------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'key[0]'                                                                                           ;
+--------+--------------------+------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node          ; To Node          ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------+------------------+--------------+-------------+--------------+------------+------------+
; -4.119 ; position_b1_cod[2] ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; 0.002      ; 5.159      ;
; -4.078 ; atack_count[31]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -1.129     ; 3.987      ;
; -4.078 ; atack_count[31]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -1.129     ; 3.987      ;
; -4.008 ; atack_count[21]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -1.129     ; 3.917      ;
; -4.008 ; atack_count[21]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -1.129     ; 3.917      ;
; -4.005 ; position_b1_cod[2] ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; 0.002      ; 5.045      ;
; -3.994 ; position_b1_cod[0] ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -0.293     ; 4.739      ;
; -3.980 ; atack_count[23]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -1.129     ; 3.889      ;
; -3.980 ; atack_count[23]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -1.129     ; 3.889      ;
; -3.960 ; position_b1_cod[3] ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; 0.002      ; 5.000      ;
; -3.895 ; position_b1_cod[2] ; current_state.V  ; key[0]       ; key[0]      ; 1.000        ; 0.373      ; 5.306      ;
; -3.880 ; position_b1_cod[0] ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -0.293     ; 4.625      ;
; -3.862 ; position_b2_cod[0] ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -0.293     ; 4.607      ;
; -3.857 ; atack_count[19]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -0.633     ; 4.262      ;
; -3.857 ; atack_count[19]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -0.633     ; 4.262      ;
; -3.855 ; atack_count[20]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -1.129     ; 3.764      ;
; -3.855 ; atack_count[20]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -1.129     ; 3.764      ;
; -3.853 ; atack_count[0]     ; atack_count[30]  ; key[0]       ; key[0]      ; 1.000        ; 0.693      ; 5.584      ;
; -3.846 ; position_b1_cod[3] ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; 0.002      ; 4.886      ;
; -3.829 ; atack_count[28]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -1.129     ; 3.738      ;
; -3.829 ; atack_count[28]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -1.129     ; 3.738      ;
; -3.828 ; atack_count[18]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -0.633     ; 4.233      ;
; -3.828 ; atack_count[18]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -0.633     ; 4.233      ;
; -3.770 ; position_b1_cod[0] ; current_state.V  ; key[0]       ; key[0]      ; 1.000        ; 0.078      ; 4.886      ;
; -3.760 ; atack_count[0]     ; atack_count[29]  ; key[0]       ; key[0]      ; 1.000        ; 0.693      ; 5.491      ;
; -3.741 ; atack_count[8]     ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -0.446     ; 4.333      ;
; -3.741 ; atack_count[8]     ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -0.446     ; 4.333      ;
; -3.736 ; position_b1_cod[3] ; current_state.V  ; key[0]       ; key[0]      ; 1.000        ; 0.373      ; 5.147      ;
; -3.734 ; current_state.NB   ; wrongs[0]        ; key[0]       ; key[0]      ; 1.000        ; -0.045     ; 4.727      ;
; -3.734 ; current_state.NB   ; wrongs[1]        ; key[0]       ; key[0]      ; 1.000        ; -0.045     ; 4.727      ;
; -3.734 ; current_state.NB   ; wrongs[2]        ; key[0]       ; key[0]      ; 1.000        ; -0.045     ; 4.727      ;
; -3.734 ; current_state.NB   ; wrongs[3]        ; key[0]       ; key[0]      ; 1.000        ; -0.045     ; 4.727      ;
; -3.734 ; current_state.NB   ; wrongs[4]        ; key[0]       ; key[0]      ; 1.000        ; -0.045     ; 4.727      ;
; -3.734 ; current_state.NB   ; wrongs[5]        ; key[0]       ; key[0]      ; 1.000        ; -0.045     ; 4.727      ;
; -3.734 ; current_state.NB   ; wrongs[6]        ; key[0]       ; key[0]      ; 1.000        ; -0.045     ; 4.727      ;
; -3.734 ; current_state.NB   ; wrongs[7]        ; key[0]       ; key[0]      ; 1.000        ; -0.045     ; 4.727      ;
; -3.734 ; current_state.NB   ; wrongs[8]        ; key[0]       ; key[0]      ; 1.000        ; -0.045     ; 4.727      ;
; -3.734 ; current_state.NB   ; wrongs[9]        ; key[0]       ; key[0]      ; 1.000        ; -0.045     ; 4.727      ;
; -3.734 ; current_state.NB   ; wrongs[10]       ; key[0]       ; key[0]      ; 1.000        ; -0.045     ; 4.727      ;
; -3.734 ; current_state.NB   ; wrongs[11]       ; key[0]       ; key[0]      ; 1.000        ; -0.045     ; 4.727      ;
; -3.734 ; current_state.NB   ; wrongs[12]       ; key[0]       ; key[0]      ; 1.000        ; -0.045     ; 4.727      ;
; -3.734 ; current_state.NB   ; wrongs[13]       ; key[0]       ; key[0]      ; 1.000        ; -0.045     ; 4.727      ;
; -3.734 ; current_state.NB   ; wrongs[14]       ; key[0]       ; key[0]      ; 1.000        ; -0.045     ; 4.727      ;
; -3.734 ; current_state.NB   ; wrongs[15]       ; key[0]       ; key[0]      ; 1.000        ; -0.045     ; 4.727      ;
; -3.717 ; position_b2_cod[1] ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -0.293     ; 4.462      ;
; -3.716 ; current_state.NB   ; wrongs[16]       ; key[0]       ; key[0]      ; 1.000        ; -0.020     ; 4.734      ;
; -3.716 ; current_state.NB   ; wrongs[17]       ; key[0]       ; key[0]      ; 1.000        ; -0.020     ; 4.734      ;
; -3.716 ; current_state.NB   ; wrongs[18]       ; key[0]       ; key[0]      ; 1.000        ; -0.020     ; 4.734      ;
; -3.716 ; current_state.NB   ; wrongs[19]       ; key[0]       ; key[0]      ; 1.000        ; -0.020     ; 4.734      ;
; -3.716 ; current_state.NB   ; wrongs[20]       ; key[0]       ; key[0]      ; 1.000        ; -0.020     ; 4.734      ;
; -3.716 ; current_state.NB   ; wrongs[21]       ; key[0]       ; key[0]      ; 1.000        ; -0.020     ; 4.734      ;
; -3.716 ; current_state.NB   ; wrongs[22]       ; key[0]       ; key[0]      ; 1.000        ; -0.020     ; 4.734      ;
; -3.716 ; current_state.NB   ; wrongs[23]       ; key[0]       ; key[0]      ; 1.000        ; -0.020     ; 4.734      ;
; -3.716 ; current_state.NB   ; wrongs[24]       ; key[0]       ; key[0]      ; 1.000        ; -0.020     ; 4.734      ;
; -3.716 ; current_state.NB   ; wrongs[25]       ; key[0]       ; key[0]      ; 1.000        ; -0.020     ; 4.734      ;
; -3.716 ; current_state.NB   ; wrongs[26]       ; key[0]       ; key[0]      ; 1.000        ; -0.020     ; 4.734      ;
; -3.716 ; current_state.NB   ; wrongs[27]       ; key[0]       ; key[0]      ; 1.000        ; -0.020     ; 4.734      ;
; -3.716 ; current_state.NB   ; wrongs[28]       ; key[0]       ; key[0]      ; 1.000        ; -0.020     ; 4.734      ;
; -3.716 ; current_state.NB   ; wrongs[29]       ; key[0]       ; key[0]      ; 1.000        ; -0.020     ; 4.734      ;
; -3.716 ; current_state.NB   ; wrongs[30]       ; key[0]       ; key[0]      ; 1.000        ; -0.020     ; 4.734      ;
; -3.716 ; current_state.NB   ; wrongs[31]       ; key[0]       ; key[0]      ; 1.000        ; -0.020     ; 4.734      ;
; -3.714 ; atack_count[11]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -0.446     ; 4.306      ;
; -3.714 ; atack_count[11]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -0.446     ; 4.306      ;
; -3.708 ; atack_count[22]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -1.129     ; 3.617      ;
; -3.708 ; atack_count[22]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -1.129     ; 3.617      ;
; -3.708 ; atack_count[17]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -0.633     ; 4.113      ;
; -3.708 ; atack_count[17]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -0.633     ; 4.113      ;
; -3.704 ; atack_count[29]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -1.129     ; 3.613      ;
; -3.704 ; atack_count[29]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -1.129     ; 3.613      ;
; -3.702 ; atack_count[26]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -1.129     ; 3.611      ;
; -3.702 ; atack_count[26]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -1.129     ; 3.611      ;
; -3.700 ; current_state.NB   ; strikes[0]       ; key[0]       ; key[0]      ; 1.000        ; -0.027     ; 4.711      ;
; -3.700 ; current_state.NB   ; strikes[1]       ; key[0]       ; key[0]      ; 1.000        ; -0.027     ; 4.711      ;
; -3.700 ; current_state.NB   ; strikes[2]       ; key[0]       ; key[0]      ; 1.000        ; -0.027     ; 4.711      ;
; -3.700 ; current_state.NB   ; strikes[3]       ; key[0]       ; key[0]      ; 1.000        ; -0.027     ; 4.711      ;
; -3.700 ; current_state.NB   ; strikes[4]       ; key[0]       ; key[0]      ; 1.000        ; -0.027     ; 4.711      ;
; -3.700 ; current_state.NB   ; strikes[5]       ; key[0]       ; key[0]      ; 1.000        ; -0.027     ; 4.711      ;
; -3.700 ; current_state.NB   ; strikes[6]       ; key[0]       ; key[0]      ; 1.000        ; -0.027     ; 4.711      ;
; -3.700 ; current_state.NB   ; strikes[7]       ; key[0]       ; key[0]      ; 1.000        ; -0.027     ; 4.711      ;
; -3.700 ; current_state.NB   ; strikes[8]       ; key[0]       ; key[0]      ; 1.000        ; -0.027     ; 4.711      ;
; -3.700 ; current_state.NB   ; strikes[9]       ; key[0]       ; key[0]      ; 1.000        ; -0.027     ; 4.711      ;
; -3.700 ; current_state.NB   ; strikes[10]      ; key[0]       ; key[0]      ; 1.000        ; -0.027     ; 4.711      ;
; -3.700 ; current_state.NB   ; strikes[11]      ; key[0]       ; key[0]      ; 1.000        ; -0.027     ; 4.711      ;
; -3.700 ; current_state.NB   ; strikes[12]      ; key[0]       ; key[0]      ; 1.000        ; -0.027     ; 4.711      ;
; -3.700 ; current_state.NB   ; strikes[13]      ; key[0]       ; key[0]      ; 1.000        ; -0.027     ; 4.711      ;
; -3.700 ; current_state.NB   ; strikes[14]      ; key[0]       ; key[0]      ; 1.000        ; -0.027     ; 4.711      ;
; -3.700 ; current_state.NB   ; strikes[15]      ; key[0]       ; key[0]      ; 1.000        ; -0.027     ; 4.711      ;
; -3.698 ; atack_count[0]     ; atack_count[28]  ; key[0]       ; key[0]      ; 1.000        ; 0.693      ; 5.429      ;
; -3.694 ; current_state.NB   ; strikes[16]      ; key[0]       ; key[0]      ; 1.000        ; -0.362     ; 4.370      ;
; -3.694 ; current_state.NB   ; strikes[17]      ; key[0]       ; key[0]      ; 1.000        ; -0.362     ; 4.370      ;
; -3.694 ; current_state.NB   ; strikes[18]      ; key[0]       ; key[0]      ; 1.000        ; -0.362     ; 4.370      ;
; -3.694 ; current_state.NB   ; strikes[19]      ; key[0]       ; key[0]      ; 1.000        ; -0.362     ; 4.370      ;
; -3.694 ; current_state.NB   ; strikes[20]      ; key[0]       ; key[0]      ; 1.000        ; -0.362     ; 4.370      ;
; -3.694 ; current_state.NB   ; strikes[21]      ; key[0]       ; key[0]      ; 1.000        ; -0.362     ; 4.370      ;
; -3.694 ; current_state.NB   ; strikes[22]      ; key[0]       ; key[0]      ; 1.000        ; -0.362     ; 4.370      ;
; -3.694 ; current_state.NB   ; strikes[23]      ; key[0]       ; key[0]      ; 1.000        ; -0.362     ; 4.370      ;
; -3.694 ; current_state.NB   ; strikes[24]      ; key[0]       ; key[0]      ; 1.000        ; -0.362     ; 4.370      ;
; -3.694 ; current_state.NB   ; strikes[25]      ; key[0]       ; key[0]      ; 1.000        ; -0.362     ; 4.370      ;
; -3.694 ; current_state.NB   ; strikes[26]      ; key[0]       ; key[0]      ; 1.000        ; -0.362     ; 4.370      ;
; -3.694 ; current_state.NB   ; strikes[27]      ; key[0]       ; key[0]      ; 1.000        ; -0.362     ; 4.370      ;
+--------+--------------------+------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'current_state.A'                                                                                 ;
+--------+------------------+---------------+--------------+-----------------+--------------+------------+------------+
; Slack  ; From Node        ; To Node       ; Launch Clock ; Latch Clock     ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------+---------------+--------------+-----------------+--------------+------------+------------+
; -2.523 ; strikes[7]       ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.936      ;
; -2.429 ; wrongs[8]        ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.805      ; 5.597      ;
; -2.407 ; wrongs[9]        ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.805      ; 5.575      ;
; -2.388 ; wrongs[10]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.805      ; 5.556      ;
; -2.386 ; strikes[14]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.799      ;
; -2.372 ; wrongs[8]        ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.654      ; 5.521      ;
; -2.366 ; strikes[8]       ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.779      ;
; -2.361 ; strikes[6]       ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.774      ;
; -2.350 ; wrongs[9]        ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.654      ; 5.499      ;
; -2.344 ; strikes[9]       ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.757      ;
; -2.343 ; strikes[26]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.433      ; 5.091      ;
; -2.340 ; strikes[15]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.753      ;
; -2.333 ; strikes[16]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.433      ; 5.081      ;
; -2.331 ; wrongs[10]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.654      ; 5.480      ;
; -2.326 ; strikes[3]       ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.739      ;
; -2.321 ; strikes[12]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.734      ;
; -2.287 ; wrongs[8]        ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.655      ; 5.442      ;
; -2.279 ; strikes[17]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.433      ; 5.027      ;
; -2.265 ; wrongs[9]        ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.655      ; 5.420      ;
; -2.246 ; wrongs[10]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.655      ; 5.401      ;
; -2.233 ; wrongs[15]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.805      ; 5.401      ;
; -2.226 ; wrongs[11]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.805      ; 5.394      ;
; -2.226 ; wrongs[7]        ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.805      ; 5.394      ;
; -2.226 ; strikes[27]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.433      ; 4.974      ;
; -2.197 ; strikes[2]       ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.610      ;
; -2.196 ; strikes[5]       ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.609      ;
; -2.180 ; strikes[4]       ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.593      ;
; -2.176 ; wrongs[15]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.654      ; 5.325      ;
; -2.176 ; strikes[10]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.589      ;
; -2.169 ; wrongs[11]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.654      ; 5.318      ;
; -2.169 ; wrongs[7]        ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.654      ; 5.318      ;
; -2.165 ; wrongs[16]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.780      ; 5.308      ;
; -2.130 ; wrongs[27]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.780      ; 5.273      ;
; -2.128 ; wrongs[8]        ; ledr[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.633      ; 5.261      ;
; -2.116 ; strikes[7]       ; ledg[0]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.569      ;
; -2.116 ; wrongs[13]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.805      ; 5.284      ;
; -2.115 ; strikes[7]       ; ledg[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.099      ; 4.569      ;
; -2.108 ; wrongs[16]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.629      ; 5.232      ;
; -2.106 ; wrongs[9]        ; ledr[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.633      ; 5.239      ;
; -2.094 ; wrongs[12]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.805      ; 5.262      ;
; -2.091 ; wrongs[15]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.655      ; 5.246      ;
; -2.087 ; wrongs[10]       ; ledr[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.633      ; 5.220      ;
; -2.085 ; wrongs[14]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.805      ; 5.253      ;
; -2.084 ; wrongs[11]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.655      ; 5.239      ;
; -2.084 ; wrongs[7]        ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.655      ; 5.239      ;
; -2.073 ; wrongs[27]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.629      ; 5.197      ;
; -2.066 ; strikes[29]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.433      ; 4.814      ;
; -2.059 ; wrongs[13]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.654      ; 5.208      ;
; -2.058 ; strikes[28]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.433      ; 4.806      ;
; -2.055 ; strikes[13]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.468      ;
; -2.049 ; wrongs[18]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.780      ; 5.192      ;
; -2.037 ; wrongs[12]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.654      ; 5.186      ;
; -2.033 ; strikes[11]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.446      ;
; -2.030 ; wrongs[30]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.780      ; 5.173      ;
; -2.028 ; wrongs[14]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.654      ; 5.177      ;
; -2.023 ; wrongs[16]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.630      ; 5.153      ;
; -2.018 ; wrongs[29]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.780      ; 5.161      ;
; -1.996 ; wrongs[28]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.780      ; 5.139      ;
; -1.994 ; strikes[19]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.433      ; 4.742      ;
; -1.992 ; wrongs[18]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.629      ; 5.116      ;
; -1.988 ; wrongs[27]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.630      ; 5.118      ;
; -1.983 ; wrongs[26]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.780      ; 5.126      ;
; -1.979 ; strikes[14]      ; ledg[0]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.432      ;
; -1.978 ; strikes[14]      ; ledg[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.099      ; 4.432      ;
; -1.974 ; wrongs[13]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.655      ; 5.129      ;
; -1.973 ; wrongs[30]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.629      ; 5.097      ;
; -1.961 ; wrongs[29]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.629      ; 5.085      ;
; -1.961 ; strikes[18]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.433      ; 4.709      ;
; -1.959 ; strikes[8]       ; ledg[0]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.412      ;
; -1.958 ; strikes[8]       ; ledg[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.099      ; 4.412      ;
; -1.954 ; strikes[6]       ; ledg[0]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.407      ;
; -1.953 ; strikes[6]       ; ledg[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.099      ; 4.407      ;
; -1.952 ; wrongs[12]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.655      ; 5.107      ;
; -1.943 ; wrongs[14]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.655      ; 5.098      ;
; -1.939 ; wrongs[28]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.629      ; 5.063      ;
; -1.937 ; strikes[9]       ; ledg[0]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.390      ;
; -1.936 ; strikes[26]      ; ledg[0]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.433      ; 4.724      ;
; -1.936 ; strikes[9]       ; ledg[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.099      ; 4.390      ;
; -1.935 ; wrongs[3]        ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.805      ; 5.103      ;
; -1.935 ; strikes[26]      ; ledg[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.434      ; 4.724      ;
; -1.934 ; wrongs[17]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.780      ; 5.077      ;
; -1.933 ; current_state.AX ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 4.131      ; 5.427      ;
; -1.933 ; strikes[15]      ; ledg[0]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.386      ;
; -1.932 ; wrongs[15]       ; ledr[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.633      ; 5.065      ;
; -1.932 ; strikes[15]      ; ledg[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.099      ; 4.386      ;
; -1.926 ; wrongs[26]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.629      ; 5.050      ;
; -1.926 ; strikes[16]      ; ledg[0]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.433      ; 4.714      ;
; -1.925 ; wrongs[11]       ; ledr[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.633      ; 5.058      ;
; -1.925 ; wrongs[7]        ; ledr[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.633      ; 5.058      ;
; -1.925 ; strikes[16]      ; ledg[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.434      ; 4.714      ;
; -1.919 ; strikes[3]       ; ledg[0]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.372      ;
; -1.918 ; strikes[3]       ; ledg[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.099      ; 4.372      ;
; -1.914 ; strikes[12]      ; ledg[0]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.098      ; 4.367      ;
; -1.913 ; strikes[12]      ; ledg[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.099      ; 4.367      ;
; -1.907 ; wrongs[18]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.630      ; 5.037      ;
; -1.905 ; wrongs[5]        ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.805      ; 5.073      ;
; -1.894 ; wrongs[4]        ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.805      ; 5.062      ;
; -1.888 ; wrongs[30]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.630      ; 5.018      ;
; -1.884 ; wrongs[1]        ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.805      ; 5.052      ;
; -1.878 ; wrongs[3]        ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 3.654      ; 5.027      ;
+--------+------------------+---------------+--------------+-----------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'current_state.A'                                                                                     ;
+--------+------------------+---------------+-----------------+-----------------+--------------+------------+------------+
; Slack  ; From Node        ; To Node       ; Launch Clock    ; Latch Clock     ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------+---------------+-----------------+-----------------+--------------+------------+------------+
; -4.108 ; current_state.A  ; ledg[0]$latch ; current_state.A ; current_state.A ; 0.000        ; 6.016      ; 2.185      ;
; -3.871 ; current_state.A  ; ledr[0]$latch ; current_state.A ; current_state.A ; 0.000        ; 6.553      ; 2.959      ;
; -3.781 ; current_state.A  ; ledg[1]$latch ; current_state.A ; current_state.A ; 0.000        ; 6.017      ; 2.513      ;
; -3.608 ; current_state.A  ; ledg[0]$latch ; current_state.A ; current_state.A ; -0.500       ; 6.016      ; 2.185      ;
; -3.413 ; current_state.A  ; ledg[2]$latch ; current_state.A ; current_state.A ; 0.000        ; 6.016      ; 2.880      ;
; -3.371 ; current_state.A  ; ledr[0]$latch ; current_state.A ; current_state.A ; -0.500       ; 6.553      ; 2.959      ;
; -3.281 ; current_state.A  ; ledg[1]$latch ; current_state.A ; current_state.A ; -0.500       ; 6.017      ; 2.513      ;
; -3.012 ; current_state.A  ; ledr[1]$latch ; current_state.A ; current_state.A ; 0.000        ; 6.555      ; 3.820      ;
; -2.913 ; current_state.A  ; ledg[2]$latch ; current_state.A ; current_state.A ; -0.500       ; 6.016      ; 2.880      ;
; -2.902 ; current_state.A  ; ledr[2]$latch ; current_state.A ; current_state.A ; 0.000        ; 6.533      ; 3.908      ;
; -2.512 ; current_state.A  ; ledr[1]$latch ; current_state.A ; current_state.A ; -0.500       ; 6.555      ; 3.820      ;
; -2.402 ; current_state.A  ; ledr[2]$latch ; current_state.A ; current_state.A ; -0.500       ; 6.533      ; 3.908      ;
; -2.312 ; current_state.A  ; ledr[4]$latch ; current_state.A ; current_state.A ; 0.000        ; 6.555      ; 4.520      ;
; -2.310 ; current_state.A  ; ledr[5]$latch ; current_state.A ; current_state.A ; 0.000        ; 6.554      ; 4.521      ;
; -2.307 ; current_state.A  ; ledr[3]$latch ; current_state.A ; current_state.A ; 0.000        ; 6.705      ; 4.675      ;
; -1.812 ; current_state.A  ; ledr[4]$latch ; current_state.A ; current_state.A ; -0.500       ; 6.555      ; 4.520      ;
; -1.810 ; current_state.A  ; ledr[5]$latch ; current_state.A ; current_state.A ; -0.500       ; 6.554      ; 4.521      ;
; -1.807 ; current_state.A  ; ledr[3]$latch ; current_state.A ; current_state.A ; -0.500       ; 6.705      ; 4.675      ;
; -1.105 ; current_state.D  ; ledr[6]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.971      ; 2.366      ;
; -1.084 ; current_state.D  ; ledr[3]$latch ; key[0]          ; current_state.A ; -0.500       ; 4.131      ; 2.547      ;
; -0.751 ; current_state.D  ; ledr[5]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.980      ; 2.729      ;
; -0.749 ; current_state.D  ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.981      ; 2.732      ;
; -0.747 ; current_state.D  ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.979      ; 2.732      ;
; -0.569 ; current_state.V  ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.072      ; 2.003      ;
; -0.557 ; current_state.D  ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.981      ; 2.924      ;
; -0.499 ; wrongs[2]        ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.655      ; 2.656      ;
; -0.491 ; wrongs[2]        ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.653      ; 2.662      ;
; -0.487 ; current_state.D  ; ledr[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.959      ; 2.972      ;
; -0.427 ; strikes[0]       ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.098      ; 2.171      ;
; -0.423 ; strikes[0]       ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.098      ; 2.175      ;
; -0.388 ; strikes[1]       ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.098      ; 2.210      ;
; -0.384 ; current_state.V  ; ledg[3]$latch ; key[0]          ; current_state.A ; -0.500       ; 2.890      ; 2.006      ;
; -0.377 ; strikes[1]       ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.098      ; 2.221      ;
; -0.335 ; current_state.V  ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.071      ; 2.236      ;
; -0.326 ; current_state.V  ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.071      ; 2.245      ;
; -0.160 ; current_state.AX ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.443      ; 2.783      ;
; -0.068 ; wrongs[2]        ; ledr[5]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.654      ; 3.086      ;
; -0.005 ; current_state.AX ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.442      ; 2.937      ;
; 0.025  ; strikes[1]       ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.099      ; 2.624      ;
; 0.208  ; current_state.AX ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.442      ; 3.150      ;
; 0.232  ; current_state.AX ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.979      ; 3.711      ;
; 0.395  ; wrongs[2]        ; ledr[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.633      ; 3.528      ;
; 0.526  ; wrongs[1]        ; ledr[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.633      ; 3.659      ;
; 0.643  ; wrongs[1]        ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.655      ; 3.798      ;
; 0.724  ; wrongs[0]        ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.655      ; 3.879      ;
; 0.769  ; wrongs[1]        ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.653      ; 3.922      ;
; 0.807  ; wrongs[21]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 3.937      ;
; 0.816  ; wrongs[22]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 3.946      ;
; 0.841  ; wrongs[19]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 3.971      ;
; 0.850  ; wrongs[0]        ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.653      ; 4.003      ;
; 0.891  ; wrongs[6]        ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.655      ; 4.046      ;
; 0.908  ; wrongs[23]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.038      ;
; 0.922  ; wrongs[31]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.052      ;
; 0.933  ; wrongs[21]       ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.628      ; 4.061      ;
; 0.942  ; wrongs[22]       ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.628      ; 4.070      ;
; 0.946  ; wrongs[20]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.076      ;
; 0.950  ; wrongs[25]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.080      ;
; 0.961  ; wrongs[21]       ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.091      ;
; 0.967  ; wrongs[19]       ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.628      ; 4.095      ;
; 0.970  ; wrongs[22]       ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.100      ;
; 0.979  ; wrongs[24]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.109      ;
; 0.989  ; wrongs[1]        ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.655      ; 4.144      ;
; 0.995  ; wrongs[19]       ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.125      ;
; 0.999  ; wrongs[1]        ; ledr[5]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.654      ; 4.153      ;
; 1.002  ; wrongs[1]        ; ledr[3]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.805      ; 4.307      ;
; 1.011  ; wrongs[4]        ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.655      ; 4.166      ;
; 1.017  ; wrongs[6]        ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.653      ; 4.170      ;
; 1.022  ; wrongs[5]        ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.655      ; 4.177      ;
; 1.034  ; wrongs[23]       ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.628      ; 4.162      ;
; 1.048  ; wrongs[31]       ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.628      ; 4.176      ;
; 1.051  ; wrongs[17]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.181      ;
; 1.052  ; wrongs[3]        ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.655      ; 4.207      ;
; 1.062  ; wrongs[23]       ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.192      ;
; 1.071  ; wrongs[21]       ; ledr[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.608      ; 4.179      ;
; 1.072  ; wrongs[20]       ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.628      ; 4.200      ;
; 1.076  ; wrongs[31]       ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.206      ;
; 1.076  ; wrongs[25]       ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.628      ; 4.204      ;
; 1.080  ; wrongs[22]       ; ledr[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.608      ; 4.188      ;
; 1.091  ; current_state.AX ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.981      ; 4.572      ;
; 1.095  ; wrongs[0]        ; ledr[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.633      ; 4.228      ;
; 1.100  ; wrongs[26]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.230      ;
; 1.100  ; wrongs[20]       ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.230      ;
; 1.104  ; wrongs[25]       ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.234      ;
; 1.105  ; wrongs[24]       ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.628      ; 4.233      ;
; 1.105  ; wrongs[19]       ; ledr[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.608      ; 4.213      ;
; 1.109  ; strikes[30]      ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.433      ; 4.042      ;
; 1.112  ; strikes[30]      ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.434      ; 4.046      ;
; 1.113  ; strikes[30]      ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.433      ; 4.046      ;
; 1.113  ; wrongs[28]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.243      ;
; 1.123  ; strikes[25]      ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.433      ; 4.056      ;
; 1.125  ; strikes[24]      ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.433      ; 4.058      ;
; 1.126  ; strikes[25]      ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.434      ; 4.060      ;
; 1.127  ; strikes[25]      ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.433      ; 4.060      ;
; 1.128  ; strikes[24]      ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.434      ; 4.062      ;
; 1.129  ; strikes[24]      ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.433      ; 4.062      ;
; 1.133  ; wrongs[24]       ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.263      ;
; 1.135  ; wrongs[29]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.630      ; 4.265      ;
; 1.137  ; wrongs[4]        ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.653      ; 4.290      ;
; 1.138  ; strikes[22]      ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.433      ; 4.071      ;
; 1.141  ; strikes[22]      ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 3.434      ; 4.075      ;
+--------+------------------+---------------+-----------------+-----------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'key[0]'                                                                                           ;
+--------+-----------------+-----------------+-----------------+-------------+--------------+------------+------------+
; Slack  ; From Node       ; To Node         ; Launch Clock    ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------+-----------------+-----------------+-------------+--------------+------------+------------+
; -2.406 ; current_state.A ; current_state.A ; current_state.A ; key[0]      ; 0.000        ; 2.574      ; 0.731      ;
; -2.387 ; current_state.A ; atack_count[20] ; current_state.A ; key[0]      ; 0.000        ; 3.703      ; 1.879      ;
; -2.387 ; current_state.A ; atack_count[21] ; current_state.A ; key[0]      ; 0.000        ; 3.703      ; 1.879      ;
; -2.387 ; current_state.A ; atack_count[22] ; current_state.A ; key[0]      ; 0.000        ; 3.703      ; 1.879      ;
; -2.387 ; current_state.A ; atack_count[23] ; current_state.A ; key[0]      ; 0.000        ; 3.703      ; 1.879      ;
; -2.387 ; current_state.A ; atack_count[24] ; current_state.A ; key[0]      ; 0.000        ; 3.703      ; 1.879      ;
; -2.387 ; current_state.A ; atack_count[25] ; current_state.A ; key[0]      ; 0.000        ; 3.703      ; 1.879      ;
; -2.387 ; current_state.A ; atack_count[26] ; current_state.A ; key[0]      ; 0.000        ; 3.703      ; 1.879      ;
; -2.387 ; current_state.A ; atack_count[27] ; current_state.A ; key[0]      ; 0.000        ; 3.703      ; 1.879      ;
; -2.387 ; current_state.A ; atack_count[28] ; current_state.A ; key[0]      ; 0.000        ; 3.703      ; 1.879      ;
; -2.387 ; current_state.A ; atack_count[29] ; current_state.A ; key[0]      ; 0.000        ; 3.703      ; 1.879      ;
; -2.387 ; current_state.A ; atack_count[30] ; current_state.A ; key[0]      ; 0.000        ; 3.703      ; 1.879      ;
; -2.387 ; current_state.A ; atack_count[31] ; current_state.A ; key[0]      ; 0.000        ; 3.703      ; 1.879      ;
; -1.906 ; current_state.A ; current_state.A ; current_state.A ; key[0]      ; -0.500       ; 2.574      ; 0.731      ;
; -1.887 ; current_state.A ; atack_count[20] ; current_state.A ; key[0]      ; -0.500       ; 3.703      ; 1.879      ;
; -1.887 ; current_state.A ; atack_count[21] ; current_state.A ; key[0]      ; -0.500       ; 3.703      ; 1.879      ;
; -1.887 ; current_state.A ; atack_count[22] ; current_state.A ; key[0]      ; -0.500       ; 3.703      ; 1.879      ;
; -1.887 ; current_state.A ; atack_count[23] ; current_state.A ; key[0]      ; -0.500       ; 3.703      ; 1.879      ;
; -1.887 ; current_state.A ; atack_count[24] ; current_state.A ; key[0]      ; -0.500       ; 3.703      ; 1.879      ;
; -1.887 ; current_state.A ; atack_count[25] ; current_state.A ; key[0]      ; -0.500       ; 3.703      ; 1.879      ;
; -1.887 ; current_state.A ; atack_count[26] ; current_state.A ; key[0]      ; -0.500       ; 3.703      ; 1.879      ;
; -1.887 ; current_state.A ; atack_count[27] ; current_state.A ; key[0]      ; -0.500       ; 3.703      ; 1.879      ;
; -1.887 ; current_state.A ; atack_count[28] ; current_state.A ; key[0]      ; -0.500       ; 3.703      ; 1.879      ;
; -1.887 ; current_state.A ; atack_count[29] ; current_state.A ; key[0]      ; -0.500       ; 3.703      ; 1.879      ;
; -1.887 ; current_state.A ; atack_count[30] ; current_state.A ; key[0]      ; -0.500       ; 3.703      ; 1.879      ;
; -1.887 ; current_state.A ; atack_count[31] ; current_state.A ; key[0]      ; -0.500       ; 3.703      ; 1.879      ;
; -1.644 ; current_state.A ; atack_count[0]  ; current_state.A ; key[0]      ; 0.000        ; 3.010      ; 1.929      ;
; -1.644 ; current_state.A ; atack_count[3]  ; current_state.A ; key[0]      ; 0.000        ; 3.010      ; 1.929      ;
; -1.644 ; current_state.A ; atack_count[4]  ; current_state.A ; key[0]      ; 0.000        ; 3.010      ; 1.929      ;
; -1.644 ; current_state.A ; atack_count[5]  ; current_state.A ; key[0]      ; 0.000        ; 3.010      ; 1.929      ;
; -1.644 ; current_state.A ; atack_count[6]  ; current_state.A ; key[0]      ; 0.000        ; 3.010      ; 1.929      ;
; -1.644 ; current_state.A ; atack_count[7]  ; current_state.A ; key[0]      ; 0.000        ; 3.010      ; 1.929      ;
; -1.624 ; current_state.A ; current_state.V ; current_state.A ; key[0]      ; 0.000        ; 2.945      ; 1.884      ;
; -1.540 ; current_state.A ; atack_count[16] ; current_state.A ; key[0]      ; 0.000        ; 3.207      ; 2.230      ;
; -1.540 ; current_state.A ; atack_count[17] ; current_state.A ; key[0]      ; 0.000        ; 3.207      ; 2.230      ;
; -1.540 ; current_state.A ; atack_count[18] ; current_state.A ; key[0]      ; 0.000        ; 3.207      ; 2.230      ;
; -1.540 ; current_state.A ; atack_count[19] ; current_state.A ; key[0]      ; 0.000        ; 3.207      ; 2.230      ;
; -1.411 ; current_state.A ; atack_count[8]  ; current_state.A ; key[0]      ; 0.000        ; 3.020      ; 2.172      ;
; -1.411 ; current_state.A ; atack_count[9]  ; current_state.A ; key[0]      ; 0.000        ; 3.020      ; 2.172      ;
; -1.411 ; current_state.A ; atack_count[10] ; current_state.A ; key[0]      ; 0.000        ; 3.020      ; 2.172      ;
; -1.411 ; current_state.A ; atack_count[11] ; current_state.A ; key[0]      ; 0.000        ; 3.020      ; 2.172      ;
; -1.411 ; current_state.A ; atack_count[12] ; current_state.A ; key[0]      ; 0.000        ; 3.020      ; 2.172      ;
; -1.411 ; current_state.A ; atack_count[13] ; current_state.A ; key[0]      ; 0.000        ; 3.020      ; 2.172      ;
; -1.411 ; current_state.A ; atack_count[14] ; current_state.A ; key[0]      ; 0.000        ; 3.020      ; 2.172      ;
; -1.411 ; current_state.A ; atack_count[15] ; current_state.A ; key[0]      ; 0.000        ; 3.020      ; 2.172      ;
; -1.328 ; current_state.A ; atack_count[2]  ; current_state.A ; key[0]      ; 0.000        ; 3.023      ; 2.258      ;
; -1.251 ; current_state.A ; atack_count[1]  ; current_state.A ; key[0]      ; 0.000        ; 3.023      ; 2.335      ;
; -1.144 ; current_state.A ; atack_count[0]  ; current_state.A ; key[0]      ; -0.500       ; 3.010      ; 1.929      ;
; -1.144 ; current_state.A ; atack_count[3]  ; current_state.A ; key[0]      ; -0.500       ; 3.010      ; 1.929      ;
; -1.144 ; current_state.A ; atack_count[4]  ; current_state.A ; key[0]      ; -0.500       ; 3.010      ; 1.929      ;
; -1.144 ; current_state.A ; atack_count[5]  ; current_state.A ; key[0]      ; -0.500       ; 3.010      ; 1.929      ;
; -1.144 ; current_state.A ; atack_count[6]  ; current_state.A ; key[0]      ; -0.500       ; 3.010      ; 1.929      ;
; -1.144 ; current_state.A ; atack_count[7]  ; current_state.A ; key[0]      ; -0.500       ; 3.010      ; 1.929      ;
; -1.124 ; current_state.A ; current_state.V ; current_state.A ; key[0]      ; -0.500       ; 2.945      ; 1.884      ;
; -1.040 ; current_state.A ; atack_count[16] ; current_state.A ; key[0]      ; -0.500       ; 3.207      ; 2.230      ;
; -1.040 ; current_state.A ; atack_count[17] ; current_state.A ; key[0]      ; -0.500       ; 3.207      ; 2.230      ;
; -1.040 ; current_state.A ; atack_count[18] ; current_state.A ; key[0]      ; -0.500       ; 3.207      ; 2.230      ;
; -1.040 ; current_state.A ; atack_count[19] ; current_state.A ; key[0]      ; -0.500       ; 3.207      ; 2.230      ;
; -0.911 ; current_state.A ; atack_count[8]  ; current_state.A ; key[0]      ; -0.500       ; 3.020      ; 2.172      ;
; -0.911 ; current_state.A ; atack_count[9]  ; current_state.A ; key[0]      ; -0.500       ; 3.020      ; 2.172      ;
; -0.911 ; current_state.A ; atack_count[10] ; current_state.A ; key[0]      ; -0.500       ; 3.020      ; 2.172      ;
; -0.911 ; current_state.A ; atack_count[11] ; current_state.A ; key[0]      ; -0.500       ; 3.020      ; 2.172      ;
; -0.911 ; current_state.A ; atack_count[12] ; current_state.A ; key[0]      ; -0.500       ; 3.020      ; 2.172      ;
; -0.911 ; current_state.A ; atack_count[13] ; current_state.A ; key[0]      ; -0.500       ; 3.020      ; 2.172      ;
; -0.911 ; current_state.A ; atack_count[14] ; current_state.A ; key[0]      ; -0.500       ; 3.020      ; 2.172      ;
; -0.911 ; current_state.A ; atack_count[15] ; current_state.A ; key[0]      ; -0.500       ; 3.020      ; 2.172      ;
; -0.828 ; current_state.A ; atack_count[2]  ; current_state.A ; key[0]      ; -0.500       ; 3.023      ; 2.258      ;
; -0.751 ; current_state.A ; atack_count[1]  ; current_state.A ; key[0]      ; -0.500       ; 3.023      ; 2.335      ;
; -0.734 ; current_state.A ; strikes[16]     ; current_state.A ; key[0]      ; 0.000        ; 2.583      ; 2.412      ;
; -0.734 ; current_state.A ; strikes[17]     ; current_state.A ; key[0]      ; 0.000        ; 2.583      ; 2.412      ;
; -0.734 ; current_state.A ; strikes[18]     ; current_state.A ; key[0]      ; 0.000        ; 2.583      ; 2.412      ;
; -0.734 ; current_state.A ; strikes[19]     ; current_state.A ; key[0]      ; 0.000        ; 2.583      ; 2.412      ;
; -0.734 ; current_state.A ; strikes[20]     ; current_state.A ; key[0]      ; 0.000        ; 2.583      ; 2.412      ;
; -0.734 ; current_state.A ; strikes[21]     ; current_state.A ; key[0]      ; 0.000        ; 2.583      ; 2.412      ;
; -0.734 ; current_state.A ; strikes[22]     ; current_state.A ; key[0]      ; 0.000        ; 2.583      ; 2.412      ;
; -0.734 ; current_state.A ; strikes[23]     ; current_state.A ; key[0]      ; 0.000        ; 2.583      ; 2.412      ;
; -0.734 ; current_state.A ; strikes[24]     ; current_state.A ; key[0]      ; 0.000        ; 2.583      ; 2.412      ;
; -0.734 ; current_state.A ; strikes[25]     ; current_state.A ; key[0]      ; 0.000        ; 2.583      ; 2.412      ;
; -0.734 ; current_state.A ; strikes[26]     ; current_state.A ; key[0]      ; 0.000        ; 2.583      ; 2.412      ;
; -0.734 ; current_state.A ; strikes[27]     ; current_state.A ; key[0]      ; 0.000        ; 2.583      ; 2.412      ;
; -0.734 ; current_state.A ; strikes[28]     ; current_state.A ; key[0]      ; 0.000        ; 2.583      ; 2.412      ;
; -0.734 ; current_state.A ; strikes[29]     ; current_state.A ; key[0]      ; 0.000        ; 2.583      ; 2.412      ;
; -0.734 ; current_state.A ; strikes[30]     ; current_state.A ; key[0]      ; 0.000        ; 2.583      ; 2.412      ;
; -0.734 ; current_state.A ; strikes[31]     ; current_state.A ; key[0]      ; 0.000        ; 2.583      ; 2.412      ;
; -0.728 ; current_state.A ; strikes[0]      ; current_state.A ; key[0]      ; 0.000        ; 2.918      ; 2.753      ;
; -0.728 ; current_state.A ; strikes[1]      ; current_state.A ; key[0]      ; 0.000        ; 2.918      ; 2.753      ;
; -0.728 ; current_state.A ; strikes[2]      ; current_state.A ; key[0]      ; 0.000        ; 2.918      ; 2.753      ;
; -0.728 ; current_state.A ; strikes[3]      ; current_state.A ; key[0]      ; 0.000        ; 2.918      ; 2.753      ;
; -0.728 ; current_state.A ; strikes[4]      ; current_state.A ; key[0]      ; 0.000        ; 2.918      ; 2.753      ;
; -0.728 ; current_state.A ; strikes[5]      ; current_state.A ; key[0]      ; 0.000        ; 2.918      ; 2.753      ;
; -0.728 ; current_state.A ; strikes[6]      ; current_state.A ; key[0]      ; 0.000        ; 2.918      ; 2.753      ;
; -0.728 ; current_state.A ; strikes[7]      ; current_state.A ; key[0]      ; 0.000        ; 2.918      ; 2.753      ;
; -0.728 ; current_state.A ; strikes[8]      ; current_state.A ; key[0]      ; 0.000        ; 2.918      ; 2.753      ;
; -0.728 ; current_state.A ; strikes[9]      ; current_state.A ; key[0]      ; 0.000        ; 2.918      ; 2.753      ;
; -0.728 ; current_state.A ; strikes[10]     ; current_state.A ; key[0]      ; 0.000        ; 2.918      ; 2.753      ;
; -0.728 ; current_state.A ; strikes[11]     ; current_state.A ; key[0]      ; 0.000        ; 2.918      ; 2.753      ;
; -0.728 ; current_state.A ; strikes[12]     ; current_state.A ; key[0]      ; 0.000        ; 2.918      ; 2.753      ;
; -0.728 ; current_state.A ; strikes[13]     ; current_state.A ; key[0]      ; 0.000        ; 2.918      ; 2.753      ;
; -0.728 ; current_state.A ; strikes[14]     ; current_state.A ; key[0]      ; 0.000        ; 2.918      ; 2.753      ;
; -0.728 ; current_state.A ; strikes[15]     ; current_state.A ; key[0]      ; 0.000        ; 2.918      ; 2.753      ;
+--------+-----------------+-----------------+-----------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'key[0]'                                                             ;
+--------+--------------+----------------+------------------+--------+------------+--------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock  ; Clock Edge ; Target             ;
+--------+--------------+----------------+------------------+--------+------------+--------------------+
; -1.469 ; 1.000        ; 2.469          ; Port Rate        ; key[0] ; Rise       ; key[0]             ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[0]     ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[0]     ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[10]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[10]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[11]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[11]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[12]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[12]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[13]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[13]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[14]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[14]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[15]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[15]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[16]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[16]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[17]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[17]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[18]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[18]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[19]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[19]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[1]     ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[1]     ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[20]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[20]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[21]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[21]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[22]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[22]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[23]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[23]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[24]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[24]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[25]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[25]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[26]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[26]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[27]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[27]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[28]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[28]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[29]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[29]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[2]     ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[2]     ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[30]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[30]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[31]    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[31]    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[3]     ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[3]     ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[4]     ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[4]     ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[5]     ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[5]     ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[6]     ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[6]     ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[7]     ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[7]     ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[8]     ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[8]     ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; atack_count[9]     ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[9]     ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; current_state.A    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; current_state.A    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; current_state.AX   ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; current_state.AX   ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; current_state.D    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; current_state.D    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; current_state.NA   ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; current_state.NA   ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; current_state.NB   ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; current_state.NB   ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; current_state.V    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; current_state.V    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; position_a[0]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; position_a[0]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; position_a[1]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; position_a[1]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; position_a[2]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; position_a[2]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; position_a[3]      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; position_a[3]      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; position_a_cod[0]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; position_a_cod[0]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; position_a_cod[1]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; position_a_cod[1]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; position_a_cod[2]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; position_a_cod[2]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; position_a_cod[3]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; position_a_cod[3]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; position_b1_cod[0] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; position_b1_cod[0] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; position_b1_cod[1] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; position_b1_cod[1] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; position_b1_cod[2] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; key[0] ; Fall       ; position_b1_cod[2] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; key[0] ; Fall       ; position_b1_cod[3] ;
+--------+--------------+----------------+------------------+--------+------------+--------------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'current_state.A'                                                                       ;
+-------+--------------+----------------+------------------+-----------------+------------+-------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock           ; Clock Edge ; Target                        ;
+-------+--------------+----------------+------------------+-----------------+------------+-------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; Selector0~2clkctrl|inclk[0]   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; Selector0~2clkctrl|inclk[0]   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; Selector0~2clkctrl|outclk     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; Selector0~2clkctrl|outclk     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; Selector0~2|combout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; Selector0~2|combout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; Selector0~2|datab             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; Selector0~2|datab             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; Selector117~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; Selector117~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; Selector117~0|datab           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; Selector117~0|datab           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; Selector117~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; Selector117~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; Selector117~1|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; Selector117~1|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; Selector132~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; Selector132~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; Selector132~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; Selector132~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; Selector132~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; Selector132~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; Selector132~1|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; Selector132~1|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; current_state.A|regout        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; current_state.A|regout        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; hex1~0|combout                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; hex1~0|combout                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; hex1~0|datad                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; hex1~0|datad                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledg[0]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledg[0]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledg[0]$latch|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledg[0]$latch|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledg[1]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledg[1]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledg[1]$latch|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledg[1]$latch|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledg[2]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledg[2]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledg[2]$latch|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledg[2]$latch|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledg[3]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledg[3]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledg[3]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledg[3]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledr[0]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledr[0]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledr[0]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledr[0]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledr[1]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledr[1]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledr[1]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledr[1]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledr[2]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledr[2]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledr[2]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledr[2]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledr[3]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledr[3]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledr[3]$latch|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledr[3]$latch|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledr[4]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledr[4]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledr[4]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledr[4]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledr[5]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledr[5]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledr[5]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledr[5]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledr[6]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledr[6]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledr[6]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledr[6]$latch|datad           ;
+-------+--------------+----------------+------------------+-----------------+------------+-------------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; key[*]    ; key[0]     ; 6.909 ; 6.909 ; Fall       ; key[0]          ;
;  key[1]   ; key[0]     ; 6.909 ; 6.909 ; Fall       ; key[0]          ;
; sw[*]     ; key[0]     ; 4.863 ; 4.863 ; Fall       ; key[0]          ;
;  sw[0]    ; key[0]     ; 4.075 ; 4.075 ; Fall       ; key[0]          ;
;  sw[1]    ; key[0]     ; 4.178 ; 4.178 ; Fall       ; key[0]          ;
;  sw[2]    ; key[0]     ; 4.551 ; 4.551 ; Fall       ; key[0]          ;
;  sw[3]    ; key[0]     ; 4.863 ; 4.863 ; Fall       ; key[0]          ;
;  sw[4]    ; key[0]     ; 4.381 ; 4.381 ; Fall       ; key[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; key[*]    ; key[0]     ; -3.029 ; -3.029 ; Fall       ; key[0]          ;
;  key[1]   ; key[0]     ; -3.029 ; -3.029 ; Fall       ; key[0]          ;
; sw[*]     ; key[0]     ; 0.259  ; 0.259  ; Fall       ; key[0]          ;
;  sw[0]    ; key[0]     ; 0.259  ; 0.259  ; Fall       ; key[0]          ;
;  sw[1]    ; key[0]     ; 0.141  ; 0.141  ; Fall       ; key[0]          ;
;  sw[2]    ; key[0]     ; -0.288 ; -0.288 ; Fall       ; key[0]          ;
;  sw[3]    ; key[0]     ; -0.539 ; -0.539 ; Fall       ; key[0]          ;
;  sw[4]    ; key[0]     ; -1.969 ; -1.969 ; Fall       ; key[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Clock to Output Times                                                        ;
+-----------+-----------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port      ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+-----------------+--------+--------+------------+-----------------+
; hex0[*]   ; current_state.A ; 9.981  ;        ; Rise       ; current_state.A ;
;  hex0[0]  ; current_state.A ; 8.548  ;        ; Rise       ; current_state.A ;
;  hex0[1]  ; current_state.A ; 8.387  ;        ; Rise       ; current_state.A ;
;  hex0[2]  ; current_state.A ; 9.789  ;        ; Rise       ; current_state.A ;
;  hex0[3]  ; current_state.A ; 8.497  ;        ; Rise       ; current_state.A ;
;  hex0[4]  ; current_state.A ; 7.387  ;        ; Rise       ; current_state.A ;
;  hex0[5]  ; current_state.A ; 8.956  ;        ; Rise       ; current_state.A ;
;  hex0[6]  ; current_state.A ; 9.981  ;        ; Rise       ; current_state.A ;
; hex1[*]   ; current_state.A ; 9.954  ;        ; Rise       ; current_state.A ;
;  hex1[0]  ; current_state.A ; 9.954  ;        ; Rise       ; current_state.A ;
;  hex1[2]  ; current_state.A ; 9.908  ;        ; Rise       ; current_state.A ;
;  hex1[3]  ; current_state.A ; 9.918  ;        ; Rise       ; current_state.A ;
;  hex1[5]  ; current_state.A ; 9.937  ;        ; Rise       ; current_state.A ;
;  hex1[6]  ; current_state.A ; 9.937  ;        ; Rise       ; current_state.A ;
; hex2[*]   ; current_state.A ; 9.920  ;        ; Rise       ; current_state.A ;
;  hex2[0]  ; current_state.A ; 9.897  ;        ; Rise       ; current_state.A ;
;  hex2[1]  ; current_state.A ; 9.880  ;        ; Rise       ; current_state.A ;
;  hex2[2]  ; current_state.A ; 9.920  ;        ; Rise       ; current_state.A ;
;  hex2[3]  ; current_state.A ; 9.920  ;        ; Rise       ; current_state.A ;
;  hex2[4]  ; current_state.A ; 9.549  ;        ; Rise       ; current_state.A ;
;  hex2[5]  ; current_state.A ; 9.539  ;        ; Rise       ; current_state.A ;
; ledg[*]   ; current_state.A ; 10.194 ; 10.194 ; Rise       ; current_state.A ;
;  ledg[0]  ; current_state.A ; 10.027 ; 10.027 ; Rise       ; current_state.A ;
;  ledg[1]  ; current_state.A ; 9.989  ; 9.989  ; Rise       ; current_state.A ;
;  ledg[2]  ; current_state.A ; 9.983  ; 9.983  ; Rise       ; current_state.A ;
;  ledg[3]  ; current_state.A ; 10.169 ; 10.169 ; Rise       ; current_state.A ;
;  ledg[4]  ; current_state.A ; 10.189 ; 10.189 ; Rise       ; current_state.A ;
;  ledg[5]  ; current_state.A ; 10.194 ; 10.194 ; Rise       ; current_state.A ;
;  ledg[6]  ; current_state.A ; 10.189 ; 10.189 ; Rise       ; current_state.A ;
;  ledg[7]  ; current_state.A ; 10.189 ; 10.189 ; Rise       ; current_state.A ;
;  ledg[8]  ; current_state.A ; 10.169 ; 10.169 ; Rise       ; current_state.A ;
;  ledg[9]  ; current_state.A ; 9.403  ; 9.403  ; Rise       ; current_state.A ;
; ledr[*]   ; current_state.A ; 11.128 ; 11.128 ; Rise       ; current_state.A ;
;  ledr[0]  ; current_state.A ; 10.751 ; 10.751 ; Rise       ; current_state.A ;
;  ledr[1]  ; current_state.A ; 10.708 ; 10.708 ; Rise       ; current_state.A ;
;  ledr[2]  ; current_state.A ; 10.819 ; 10.819 ; Rise       ; current_state.A ;
;  ledr[3]  ; current_state.A ; 10.679 ; 10.679 ; Rise       ; current_state.A ;
;  ledr[4]  ; current_state.A ; 10.892 ; 10.892 ; Rise       ; current_state.A ;
;  ledr[5]  ; current_state.A ; 11.128 ; 11.128 ; Rise       ; current_state.A ;
;  ledr[6]  ; current_state.A ; 10.515 ; 10.515 ; Rise       ; current_state.A ;
;  ledr[7]  ; current_state.A ; 10.706 ; 10.706 ; Rise       ; current_state.A ;
;  ledr[8]  ; current_state.A ; 10.505 ; 10.505 ; Rise       ; current_state.A ;
;  ledr[9]  ; current_state.A ; 10.454 ; 10.454 ; Rise       ; current_state.A ;
; hex0[*]   ; current_state.A ;        ; 9.981  ; Fall       ; current_state.A ;
;  hex0[0]  ; current_state.A ;        ; 8.548  ; Fall       ; current_state.A ;
;  hex0[1]  ; current_state.A ;        ; 8.387  ; Fall       ; current_state.A ;
;  hex0[2]  ; current_state.A ;        ; 9.789  ; Fall       ; current_state.A ;
;  hex0[3]  ; current_state.A ;        ; 8.497  ; Fall       ; current_state.A ;
;  hex0[4]  ; current_state.A ;        ; 7.387  ; Fall       ; current_state.A ;
;  hex0[5]  ; current_state.A ;        ; 8.956  ; Fall       ; current_state.A ;
;  hex0[6]  ; current_state.A ;        ; 9.981  ; Fall       ; current_state.A ;
; hex1[*]   ; current_state.A ;        ; 9.954  ; Fall       ; current_state.A ;
;  hex1[0]  ; current_state.A ;        ; 9.954  ; Fall       ; current_state.A ;
;  hex1[2]  ; current_state.A ;        ; 9.908  ; Fall       ; current_state.A ;
;  hex1[3]  ; current_state.A ;        ; 9.918  ; Fall       ; current_state.A ;
;  hex1[5]  ; current_state.A ;        ; 9.937  ; Fall       ; current_state.A ;
;  hex1[6]  ; current_state.A ;        ; 9.937  ; Fall       ; current_state.A ;
; hex2[*]   ; current_state.A ;        ; 9.920  ; Fall       ; current_state.A ;
;  hex2[0]  ; current_state.A ;        ; 9.897  ; Fall       ; current_state.A ;
;  hex2[1]  ; current_state.A ;        ; 9.880  ; Fall       ; current_state.A ;
;  hex2[2]  ; current_state.A ;        ; 9.920  ; Fall       ; current_state.A ;
;  hex2[3]  ; current_state.A ;        ; 9.920  ; Fall       ; current_state.A ;
;  hex2[4]  ; current_state.A ;        ; 9.549  ; Fall       ; current_state.A ;
;  hex2[5]  ; current_state.A ;        ; 9.539  ; Fall       ; current_state.A ;
; hex0[*]   ; key[0]          ; 17.142 ; 17.142 ; Fall       ; key[0]          ;
;  hex0[0]  ; key[0]          ; 15.670 ; 15.670 ; Fall       ; key[0]          ;
;  hex0[1]  ; key[0]          ; 15.517 ; 15.517 ; Fall       ; key[0]          ;
;  hex0[2]  ; key[0]          ; 16.787 ; 16.787 ; Fall       ; key[0]          ;
;  hex0[3]  ; key[0]          ; 15.619 ; 15.619 ; Fall       ; key[0]          ;
;  hex0[4]  ; key[0]          ; 15.257 ; 15.257 ; Fall       ; key[0]          ;
;  hex0[5]  ; key[0]          ; 16.117 ; 16.117 ; Fall       ; key[0]          ;
;  hex0[6]  ; key[0]          ; 17.142 ; 17.142 ; Fall       ; key[0]          ;
; hex1[*]   ; key[0]          ; 13.557 ; 13.557 ; Fall       ; key[0]          ;
;  hex1[0]  ; key[0]          ; 13.557 ; 13.557 ; Fall       ; key[0]          ;
;  hex1[1]  ; key[0]          ; 10.083 ; 10.083 ; Fall       ; key[0]          ;
;  hex1[2]  ; key[0]          ; 13.511 ; 13.511 ; Fall       ; key[0]          ;
;  hex1[3]  ; key[0]          ; 13.521 ; 13.521 ; Fall       ; key[0]          ;
;  hex1[4]  ; key[0]          ; 10.103 ; 10.103 ; Fall       ; key[0]          ;
;  hex1[5]  ; key[0]          ; 13.540 ; 13.540 ; Fall       ; key[0]          ;
;  hex1[6]  ; key[0]          ; 13.540 ; 13.540 ; Fall       ; key[0]          ;
; hex2[*]   ; key[0]          ; 13.523 ; 13.523 ; Fall       ; key[0]          ;
;  hex2[0]  ; key[0]          ; 13.500 ; 13.500 ; Fall       ; key[0]          ;
;  hex2[1]  ; key[0]          ; 13.483 ; 13.483 ; Fall       ; key[0]          ;
;  hex2[2]  ; key[0]          ; 13.523 ; 13.523 ; Fall       ; key[0]          ;
;  hex2[3]  ; key[0]          ; 13.523 ; 13.523 ; Fall       ; key[0]          ;
;  hex2[4]  ; key[0]          ; 13.152 ; 13.152 ; Fall       ; key[0]          ;
;  hex2[5]  ; key[0]          ; 13.142 ; 13.142 ; Fall       ; key[0]          ;
;  hex2[6]  ; key[0]          ; 9.727  ; 9.727  ; Fall       ; key[0]          ;
; hex3[*]   ; key[0]          ; 12.361 ; 12.361 ; Fall       ; key[0]          ;
;  hex3[0]  ; key[0]          ; 11.298 ; 11.298 ; Fall       ; key[0]          ;
;  hex3[1]  ; key[0]          ; 11.469 ; 11.469 ; Fall       ; key[0]          ;
;  hex3[2]  ; key[0]          ; 11.864 ; 11.864 ; Fall       ; key[0]          ;
;  hex3[3]  ; key[0]          ; 12.361 ; 12.361 ; Fall       ; key[0]          ;
;  hex3[6]  ; key[0]          ; 10.706 ; 10.706 ; Fall       ; key[0]          ;
+-----------+-----------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                ;
+-----------+-----------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port      ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+-----------------+--------+--------+------------+-----------------+
; hex0[*]   ; current_state.A ; 7.387  ;        ; Rise       ; current_state.A ;
;  hex0[0]  ; current_state.A ; 8.548  ;        ; Rise       ; current_state.A ;
;  hex0[1]  ; current_state.A ; 8.387  ;        ; Rise       ; current_state.A ;
;  hex0[2]  ; current_state.A ; 9.789  ;        ; Rise       ; current_state.A ;
;  hex0[3]  ; current_state.A ; 8.497  ;        ; Rise       ; current_state.A ;
;  hex0[4]  ; current_state.A ; 7.387  ;        ; Rise       ; current_state.A ;
;  hex0[5]  ; current_state.A ; 8.956  ;        ; Rise       ; current_state.A ;
;  hex0[6]  ; current_state.A ; 9.981  ;        ; Rise       ; current_state.A ;
; hex1[*]   ; current_state.A ; 9.908  ;        ; Rise       ; current_state.A ;
;  hex1[0]  ; current_state.A ; 9.954  ;        ; Rise       ; current_state.A ;
;  hex1[2]  ; current_state.A ; 9.908  ;        ; Rise       ; current_state.A ;
;  hex1[3]  ; current_state.A ; 9.918  ;        ; Rise       ; current_state.A ;
;  hex1[5]  ; current_state.A ; 9.937  ;        ; Rise       ; current_state.A ;
;  hex1[6]  ; current_state.A ; 9.937  ;        ; Rise       ; current_state.A ;
; hex2[*]   ; current_state.A ; 9.539  ;        ; Rise       ; current_state.A ;
;  hex2[0]  ; current_state.A ; 9.897  ;        ; Rise       ; current_state.A ;
;  hex2[1]  ; current_state.A ; 9.880  ;        ; Rise       ; current_state.A ;
;  hex2[2]  ; current_state.A ; 9.920  ;        ; Rise       ; current_state.A ;
;  hex2[3]  ; current_state.A ; 9.920  ;        ; Rise       ; current_state.A ;
;  hex2[4]  ; current_state.A ; 9.549  ;        ; Rise       ; current_state.A ;
;  hex2[5]  ; current_state.A ; 9.539  ;        ; Rise       ; current_state.A ;
; ledg[*]   ; current_state.A ; 9.403  ; 9.403  ; Rise       ; current_state.A ;
;  ledg[0]  ; current_state.A ; 10.027 ; 10.027 ; Rise       ; current_state.A ;
;  ledg[1]  ; current_state.A ; 9.989  ; 9.989  ; Rise       ; current_state.A ;
;  ledg[2]  ; current_state.A ; 9.983  ; 9.983  ; Rise       ; current_state.A ;
;  ledg[3]  ; current_state.A ; 10.169 ; 10.169 ; Rise       ; current_state.A ;
;  ledg[4]  ; current_state.A ; 10.189 ; 10.189 ; Rise       ; current_state.A ;
;  ledg[5]  ; current_state.A ; 10.194 ; 10.194 ; Rise       ; current_state.A ;
;  ledg[6]  ; current_state.A ; 10.189 ; 10.189 ; Rise       ; current_state.A ;
;  ledg[7]  ; current_state.A ; 10.189 ; 10.189 ; Rise       ; current_state.A ;
;  ledg[8]  ; current_state.A ; 10.169 ; 10.169 ; Rise       ; current_state.A ;
;  ledg[9]  ; current_state.A ; 9.403  ; 9.403  ; Rise       ; current_state.A ;
; ledr[*]   ; current_state.A ; 10.454 ; 10.454 ; Rise       ; current_state.A ;
;  ledr[0]  ; current_state.A ; 10.751 ; 10.751 ; Rise       ; current_state.A ;
;  ledr[1]  ; current_state.A ; 10.708 ; 10.708 ; Rise       ; current_state.A ;
;  ledr[2]  ; current_state.A ; 10.819 ; 10.819 ; Rise       ; current_state.A ;
;  ledr[3]  ; current_state.A ; 10.679 ; 10.679 ; Rise       ; current_state.A ;
;  ledr[4]  ; current_state.A ; 10.892 ; 10.892 ; Rise       ; current_state.A ;
;  ledr[5]  ; current_state.A ; 11.128 ; 11.128 ; Rise       ; current_state.A ;
;  ledr[6]  ; current_state.A ; 10.515 ; 10.515 ; Rise       ; current_state.A ;
;  ledr[7]  ; current_state.A ; 10.706 ; 10.706 ; Rise       ; current_state.A ;
;  ledr[8]  ; current_state.A ; 10.505 ; 10.505 ; Rise       ; current_state.A ;
;  ledr[9]  ; current_state.A ; 10.454 ; 10.454 ; Rise       ; current_state.A ;
; hex0[*]   ; current_state.A ;        ; 7.387  ; Fall       ; current_state.A ;
;  hex0[0]  ; current_state.A ;        ; 8.548  ; Fall       ; current_state.A ;
;  hex0[1]  ; current_state.A ;        ; 8.387  ; Fall       ; current_state.A ;
;  hex0[2]  ; current_state.A ;        ; 9.789  ; Fall       ; current_state.A ;
;  hex0[3]  ; current_state.A ;        ; 8.497  ; Fall       ; current_state.A ;
;  hex0[4]  ; current_state.A ;        ; 7.387  ; Fall       ; current_state.A ;
;  hex0[5]  ; current_state.A ;        ; 8.956  ; Fall       ; current_state.A ;
;  hex0[6]  ; current_state.A ;        ; 9.981  ; Fall       ; current_state.A ;
; hex1[*]   ; current_state.A ;        ; 9.908  ; Fall       ; current_state.A ;
;  hex1[0]  ; current_state.A ;        ; 9.954  ; Fall       ; current_state.A ;
;  hex1[2]  ; current_state.A ;        ; 9.908  ; Fall       ; current_state.A ;
;  hex1[3]  ; current_state.A ;        ; 9.918  ; Fall       ; current_state.A ;
;  hex1[5]  ; current_state.A ;        ; 9.937  ; Fall       ; current_state.A ;
;  hex1[6]  ; current_state.A ;        ; 9.937  ; Fall       ; current_state.A ;
; hex2[*]   ; current_state.A ;        ; 9.539  ; Fall       ; current_state.A ;
;  hex2[0]  ; current_state.A ;        ; 9.897  ; Fall       ; current_state.A ;
;  hex2[1]  ; current_state.A ;        ; 9.880  ; Fall       ; current_state.A ;
;  hex2[2]  ; current_state.A ;        ; 9.920  ; Fall       ; current_state.A ;
;  hex2[3]  ; current_state.A ;        ; 9.920  ; Fall       ; current_state.A ;
;  hex2[4]  ; current_state.A ;        ; 9.549  ; Fall       ; current_state.A ;
;  hex2[5]  ; current_state.A ;        ; 9.539  ; Fall       ; current_state.A ;
; hex0[*]   ; key[0]          ; 10.448 ; 10.448 ; Fall       ; key[0]          ;
;  hex0[0]  ; key[0]          ; 11.844 ; 11.844 ; Fall       ; key[0]          ;
;  hex0[1]  ; key[0]          ; 11.238 ; 11.238 ; Fall       ; key[0]          ;
;  hex0[2]  ; key[0]          ; 13.306 ; 13.306 ; Fall       ; key[0]          ;
;  hex0[3]  ; key[0]          ; 11.385 ; 11.385 ; Fall       ; key[0]          ;
;  hex0[4]  ; key[0]          ; 10.448 ; 10.448 ; Fall       ; key[0]          ;
;  hex0[5]  ; key[0]          ; 12.252 ; 12.252 ; Fall       ; key[0]          ;
;  hex0[6]  ; key[0]          ; 13.277 ; 13.277 ; Fall       ; key[0]          ;
; hex1[*]   ; key[0]          ; 10.083 ; 10.083 ; Fall       ; key[0]          ;
;  hex1[0]  ; key[0]          ; 13.557 ; 13.557 ; Fall       ; key[0]          ;
;  hex1[1]  ; key[0]          ; 10.083 ; 10.083 ; Fall       ; key[0]          ;
;  hex1[2]  ; key[0]          ; 13.511 ; 13.511 ; Fall       ; key[0]          ;
;  hex1[3]  ; key[0]          ; 13.521 ; 13.521 ; Fall       ; key[0]          ;
;  hex1[4]  ; key[0]          ; 10.103 ; 10.103 ; Fall       ; key[0]          ;
;  hex1[5]  ; key[0]          ; 13.540 ; 13.540 ; Fall       ; key[0]          ;
;  hex1[6]  ; key[0]          ; 13.540 ; 13.540 ; Fall       ; key[0]          ;
; hex2[*]   ; key[0]          ; 9.727  ; 9.727  ; Fall       ; key[0]          ;
;  hex2[0]  ; key[0]          ; 13.500 ; 13.500 ; Fall       ; key[0]          ;
;  hex2[1]  ; key[0]          ; 13.483 ; 13.483 ; Fall       ; key[0]          ;
;  hex2[2]  ; key[0]          ; 13.523 ; 13.523 ; Fall       ; key[0]          ;
;  hex2[3]  ; key[0]          ; 13.523 ; 13.523 ; Fall       ; key[0]          ;
;  hex2[4]  ; key[0]          ; 13.152 ; 13.152 ; Fall       ; key[0]          ;
;  hex2[5]  ; key[0]          ; 13.142 ; 13.142 ; Fall       ; key[0]          ;
;  hex2[6]  ; key[0]          ; 9.727  ; 9.727  ; Fall       ; key[0]          ;
; hex3[*]   ; key[0]          ; 10.706 ; 10.706 ; Fall       ; key[0]          ;
;  hex3[0]  ; key[0]          ; 11.298 ; 11.298 ; Fall       ; key[0]          ;
;  hex3[1]  ; key[0]          ; 11.469 ; 11.469 ; Fall       ; key[0]          ;
;  hex3[2]  ; key[0]          ; 11.646 ; 11.646 ; Fall       ; key[0]          ;
;  hex3[3]  ; key[0]          ; 11.246 ; 11.246 ; Fall       ; key[0]          ;
;  hex3[6]  ; key[0]          ; 10.706 ; 10.706 ; Fall       ; key[0]          ;
+-----------+-----------------+--------+--------+------------+-----------------+


+------------------------------------------+
; Fast Model Setup Summary                 ;
+-----------------+--------+---------------+
; Clock           ; Slack  ; End Point TNS ;
+-----------------+--------+---------------+
; key[0]          ; -1.029 ; -84.075       ;
; current_state.A ; -0.342 ; -2.146        ;
+-----------------+--------+---------------+


+------------------------------------------+
; Fast Model Hold Summary                  ;
+-----------------+--------+---------------+
; Clock           ; Slack  ; End Point TNS ;
+-----------------+--------+---------------+
; current_state.A ; -2.134 ; -15.911       ;
; key[0]          ; -1.199 ; -67.211       ;
+-----------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+------------------------------------------+
; Fast Model Minimum Pulse Width Summary   ;
+-----------------+--------+---------------+
; Clock           ; Slack  ; End Point TNS ;
+-----------------+--------+---------------+
; key[0]          ; -1.222 ; -122.222      ;
; current_state.A ; 0.500  ; 0.000         ;
+-----------------+--------+---------------+


+----------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'key[0]'                                                                                           ;
+--------+--------------------+------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node          ; To Node          ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------+------------------+--------------+-------------+--------------+------------+------------+
; -1.029 ; atack_count[0]     ; atack_count[30]  ; key[0]       ; key[0]      ; 1.000        ; 0.282      ; 2.343      ;
; -1.006 ; atack_count[0]     ; atack_count[29]  ; key[0]       ; key[0]      ; 1.000        ; 0.282      ; 2.320      ;
; -0.976 ; atack_count[0]     ; atack_count[31]  ; key[0]       ; key[0]      ; 1.000        ; 0.282      ; 2.290      ;
; -0.969 ; atack_count[31]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -0.451     ; 1.550      ;
; -0.969 ; atack_count[31]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -0.451     ; 1.550      ;
; -0.962 ; atack_count[0]     ; atack_count[28]  ; key[0]       ; key[0]      ; 1.000        ; 0.282      ; 2.276      ;
; -0.955 ; strikes[0]         ; strikes[31]      ; key[0]       ; key[0]      ; 1.000        ; -0.122     ; 1.865      ;
; -0.940 ; atack_count[3]     ; atack_count[30]  ; key[0]       ; key[0]      ; 1.000        ; 0.282      ; 2.254      ;
; -0.930 ; atack_count[21]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -0.451     ; 1.511      ;
; -0.930 ; atack_count[21]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -0.451     ; 1.511      ;
; -0.927 ; strikes[1]         ; strikes[31]      ; key[0]       ; key[0]      ; 1.000        ; -0.122     ; 1.837      ;
; -0.925 ; atack_count[0]     ; atack_count[27]  ; key[0]       ; key[0]      ; 1.000        ; 0.282      ; 2.239      ;
; -0.924 ; atack_count[1]     ; atack_count[30]  ; key[0]       ; key[0]      ; 1.000        ; 0.274      ; 2.230      ;
; -0.920 ; strikes[0]         ; strikes[30]      ; key[0]       ; key[0]      ; 1.000        ; -0.122     ; 1.830      ;
; -0.917 ; atack_count[3]     ; atack_count[29]  ; key[0]       ; key[0]      ; 1.000        ; 0.282      ; 2.231      ;
; -0.915 ; atack_count[23]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -0.451     ; 1.496      ;
; -0.915 ; atack_count[23]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -0.451     ; 1.496      ;
; -0.902 ; atack_count[4]     ; atack_count[30]  ; key[0]       ; key[0]      ; 1.000        ; 0.282      ; 2.216      ;
; -0.901 ; atack_count[1]     ; atack_count[29]  ; key[0]       ; key[0]      ; 1.000        ; 0.274      ; 2.207      ;
; -0.896 ; atack_count[0]     ; atack_count[21]  ; key[0]       ; key[0]      ; 1.000        ; 0.282      ; 2.210      ;
; -0.894 ; position_b1_cod[2] ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; 0.006      ; 1.932      ;
; -0.892 ; strikes[1]         ; strikes[30]      ; key[0]       ; key[0]      ; 1.000        ; -0.122     ; 1.802      ;
; -0.890 ; strikes[2]         ; strikes[31]      ; key[0]       ; key[0]      ; 1.000        ; -0.122     ; 1.800      ;
; -0.887 ; atack_count[3]     ; atack_count[31]  ; key[0]       ; key[0]      ; 1.000        ; 0.282      ; 2.201      ;
; -0.886 ; atack_count[2]     ; atack_count[30]  ; key[0]       ; key[0]      ; 1.000        ; 0.274      ; 2.192      ;
; -0.885 ; strikes[0]         ; strikes[29]      ; key[0]       ; key[0]      ; 1.000        ; -0.122     ; 1.795      ;
; -0.879 ; atack_count[4]     ; atack_count[29]  ; key[0]       ; key[0]      ; 1.000        ; 0.282      ; 2.193      ;
; -0.878 ; current_state.NB   ; wrongs[0]        ; key[0]       ; key[0]      ; 1.000        ; -0.019     ; 1.891      ;
; -0.878 ; current_state.NB   ; wrongs[1]        ; key[0]       ; key[0]      ; 1.000        ; -0.019     ; 1.891      ;
; -0.878 ; current_state.NB   ; wrongs[2]        ; key[0]       ; key[0]      ; 1.000        ; -0.019     ; 1.891      ;
; -0.878 ; current_state.NB   ; wrongs[3]        ; key[0]       ; key[0]      ; 1.000        ; -0.019     ; 1.891      ;
; -0.878 ; current_state.NB   ; wrongs[4]        ; key[0]       ; key[0]      ; 1.000        ; -0.019     ; 1.891      ;
; -0.878 ; current_state.NB   ; wrongs[5]        ; key[0]       ; key[0]      ; 1.000        ; -0.019     ; 1.891      ;
; -0.878 ; current_state.NB   ; wrongs[6]        ; key[0]       ; key[0]      ; 1.000        ; -0.019     ; 1.891      ;
; -0.878 ; current_state.NB   ; wrongs[7]        ; key[0]       ; key[0]      ; 1.000        ; -0.019     ; 1.891      ;
; -0.878 ; current_state.NB   ; wrongs[8]        ; key[0]       ; key[0]      ; 1.000        ; -0.019     ; 1.891      ;
; -0.878 ; current_state.NB   ; wrongs[9]        ; key[0]       ; key[0]      ; 1.000        ; -0.019     ; 1.891      ;
; -0.878 ; current_state.NB   ; wrongs[10]       ; key[0]       ; key[0]      ; 1.000        ; -0.019     ; 1.891      ;
; -0.878 ; current_state.NB   ; wrongs[11]       ; key[0]       ; key[0]      ; 1.000        ; -0.019     ; 1.891      ;
; -0.878 ; current_state.NB   ; wrongs[12]       ; key[0]       ; key[0]      ; 1.000        ; -0.019     ; 1.891      ;
; -0.878 ; current_state.NB   ; wrongs[13]       ; key[0]       ; key[0]      ; 1.000        ; -0.019     ; 1.891      ;
; -0.878 ; current_state.NB   ; wrongs[14]       ; key[0]       ; key[0]      ; 1.000        ; -0.019     ; 1.891      ;
; -0.878 ; current_state.NB   ; wrongs[15]       ; key[0]       ; key[0]      ; 1.000        ; -0.019     ; 1.891      ;
; -0.877 ; atack_count[28]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -0.451     ; 1.458      ;
; -0.877 ; atack_count[28]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -0.451     ; 1.458      ;
; -0.873 ; atack_count[3]     ; atack_count[28]  ; key[0]       ; key[0]      ; 1.000        ; 0.282      ; 2.187      ;
; -0.871 ; atack_count[1]     ; atack_count[31]  ; key[0]       ; key[0]      ; 1.000        ; 0.274      ; 2.177      ;
; -0.870 ; current_state.NB   ; wrongs[16]       ; key[0]       ; key[0]      ; 1.000        ; -0.002     ; 1.900      ;
; -0.870 ; current_state.NB   ; wrongs[17]       ; key[0]       ; key[0]      ; 1.000        ; -0.002     ; 1.900      ;
; -0.870 ; current_state.NB   ; wrongs[18]       ; key[0]       ; key[0]      ; 1.000        ; -0.002     ; 1.900      ;
; -0.870 ; current_state.NB   ; wrongs[19]       ; key[0]       ; key[0]      ; 1.000        ; -0.002     ; 1.900      ;
; -0.870 ; current_state.NB   ; wrongs[20]       ; key[0]       ; key[0]      ; 1.000        ; -0.002     ; 1.900      ;
; -0.870 ; current_state.NB   ; wrongs[21]       ; key[0]       ; key[0]      ; 1.000        ; -0.002     ; 1.900      ;
; -0.870 ; current_state.NB   ; wrongs[22]       ; key[0]       ; key[0]      ; 1.000        ; -0.002     ; 1.900      ;
; -0.870 ; current_state.NB   ; wrongs[23]       ; key[0]       ; key[0]      ; 1.000        ; -0.002     ; 1.900      ;
; -0.870 ; current_state.NB   ; wrongs[24]       ; key[0]       ; key[0]      ; 1.000        ; -0.002     ; 1.900      ;
; -0.870 ; current_state.NB   ; wrongs[25]       ; key[0]       ; key[0]      ; 1.000        ; -0.002     ; 1.900      ;
; -0.870 ; current_state.NB   ; wrongs[26]       ; key[0]       ; key[0]      ; 1.000        ; -0.002     ; 1.900      ;
; -0.870 ; current_state.NB   ; wrongs[27]       ; key[0]       ; key[0]      ; 1.000        ; -0.002     ; 1.900      ;
; -0.870 ; current_state.NB   ; wrongs[28]       ; key[0]       ; key[0]      ; 1.000        ; -0.002     ; 1.900      ;
; -0.870 ; current_state.NB   ; wrongs[29]       ; key[0]       ; key[0]      ; 1.000        ; -0.002     ; 1.900      ;
; -0.870 ; current_state.NB   ; wrongs[30]       ; key[0]       ; key[0]      ; 1.000        ; -0.002     ; 1.900      ;
; -0.870 ; current_state.NB   ; wrongs[31]       ; key[0]       ; key[0]      ; 1.000        ; -0.002     ; 1.900      ;
; -0.868 ; strikes[3]         ; strikes[31]      ; key[0]       ; key[0]      ; 1.000        ; -0.122     ; 1.778      ;
; -0.867 ; atack_count[19]    ; current_state.AX ; key[0]       ; key[0]      ; 1.000        ; -0.240     ; 1.659      ;
; -0.867 ; atack_count[19]    ; current_state.A  ; key[0]       ; key[0]      ; 1.000        ; -0.240     ; 1.659      ;
; -0.863 ; atack_count[0]     ; atack_count[17]  ; key[0]       ; key[0]      ; 1.000        ; 0.071      ; 1.966      ;
; -0.863 ; atack_count[2]     ; atack_count[29]  ; key[0]       ; key[0]      ; 1.000        ; 0.274      ; 2.169      ;
; -0.862 ; current_state.NB   ; strikes[0]       ; key[0]       ; key[0]      ; 1.000        ; -0.016     ; 1.878      ;
; -0.862 ; current_state.NB   ; strikes[1]       ; key[0]       ; key[0]      ; 1.000        ; -0.016     ; 1.878      ;
; -0.862 ; current_state.NB   ; strikes[2]       ; key[0]       ; key[0]      ; 1.000        ; -0.016     ; 1.878      ;
; -0.862 ; current_state.NB   ; strikes[3]       ; key[0]       ; key[0]      ; 1.000        ; -0.016     ; 1.878      ;
; -0.862 ; current_state.NB   ; strikes[4]       ; key[0]       ; key[0]      ; 1.000        ; -0.016     ; 1.878      ;
; -0.862 ; current_state.NB   ; strikes[5]       ; key[0]       ; key[0]      ; 1.000        ; -0.016     ; 1.878      ;
; -0.862 ; current_state.NB   ; strikes[6]       ; key[0]       ; key[0]      ; 1.000        ; -0.016     ; 1.878      ;
; -0.862 ; current_state.NB   ; strikes[7]       ; key[0]       ; key[0]      ; 1.000        ; -0.016     ; 1.878      ;
; -0.862 ; current_state.NB   ; strikes[8]       ; key[0]       ; key[0]      ; 1.000        ; -0.016     ; 1.878      ;
; -0.862 ; current_state.NB   ; strikes[9]       ; key[0]       ; key[0]      ; 1.000        ; -0.016     ; 1.878      ;
; -0.862 ; current_state.NB   ; strikes[10]      ; key[0]       ; key[0]      ; 1.000        ; -0.016     ; 1.878      ;
; -0.862 ; current_state.NB   ; strikes[11]      ; key[0]       ; key[0]      ; 1.000        ; -0.016     ; 1.878      ;
; -0.862 ; current_state.NB   ; strikes[12]      ; key[0]       ; key[0]      ; 1.000        ; -0.016     ; 1.878      ;
; -0.862 ; current_state.NB   ; strikes[13]      ; key[0]       ; key[0]      ; 1.000        ; -0.016     ; 1.878      ;
; -0.862 ; current_state.NB   ; strikes[14]      ; key[0]       ; key[0]      ; 1.000        ; -0.016     ; 1.878      ;
; -0.862 ; current_state.NB   ; strikes[15]      ; key[0]       ; key[0]      ; 1.000        ; -0.016     ; 1.878      ;
; -0.858 ; atack_count[5]     ; atack_count[30]  ; key[0]       ; key[0]      ; 1.000        ; 0.282      ; 2.172      ;
; -0.857 ; current_state.NB   ; strikes[16]      ; key[0]       ; key[0]      ; 1.000        ; -0.138     ; 1.751      ;
; -0.857 ; current_state.NB   ; strikes[17]      ; key[0]       ; key[0]      ; 1.000        ; -0.138     ; 1.751      ;
; -0.857 ; current_state.NB   ; strikes[18]      ; key[0]       ; key[0]      ; 1.000        ; -0.138     ; 1.751      ;
; -0.857 ; current_state.NB   ; strikes[19]      ; key[0]       ; key[0]      ; 1.000        ; -0.138     ; 1.751      ;
; -0.857 ; current_state.NB   ; strikes[20]      ; key[0]       ; key[0]      ; 1.000        ; -0.138     ; 1.751      ;
; -0.857 ; current_state.NB   ; strikes[21]      ; key[0]       ; key[0]      ; 1.000        ; -0.138     ; 1.751      ;
; -0.857 ; current_state.NB   ; strikes[22]      ; key[0]       ; key[0]      ; 1.000        ; -0.138     ; 1.751      ;
; -0.857 ; current_state.NB   ; strikes[23]      ; key[0]       ; key[0]      ; 1.000        ; -0.138     ; 1.751      ;
; -0.857 ; current_state.NB   ; strikes[24]      ; key[0]       ; key[0]      ; 1.000        ; -0.138     ; 1.751      ;
; -0.857 ; current_state.NB   ; strikes[25]      ; key[0]       ; key[0]      ; 1.000        ; -0.138     ; 1.751      ;
; -0.857 ; current_state.NB   ; strikes[26]      ; key[0]       ; key[0]      ; 1.000        ; -0.138     ; 1.751      ;
; -0.857 ; current_state.NB   ; strikes[27]      ; key[0]       ; key[0]      ; 1.000        ; -0.138     ; 1.751      ;
; -0.857 ; current_state.NB   ; strikes[28]      ; key[0]       ; key[0]      ; 1.000        ; -0.138     ; 1.751      ;
; -0.857 ; current_state.NB   ; strikes[29]      ; key[0]       ; key[0]      ; 1.000        ; -0.138     ; 1.751      ;
; -0.857 ; current_state.NB   ; strikes[30]      ; key[0]       ; key[0]      ; 1.000        ; -0.138     ; 1.751      ;
+--------+--------------------+------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'current_state.A'                                                                                 ;
+--------+------------------+---------------+--------------+-----------------+--------------+------------+------------+
; Slack  ; From Node        ; To Node       ; Launch Clock ; Latch Clock     ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------+---------------+--------------+-----------------+--------------+------------+------------+
; -0.342 ; wrongs[8]        ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 2.091      ;
; -0.329 ; wrongs[9]        ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 2.078      ;
; -0.328 ; wrongs[8]        ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.648      ; 2.089      ;
; -0.326 ; strikes[7]       ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.849      ;
; -0.315 ; wrongs[9]        ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.648      ; 2.076      ;
; -0.295 ; wrongs[10]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 2.044      ;
; -0.282 ; wrongs[8]        ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 2.034      ;
; -0.281 ; wrongs[10]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.648      ; 2.042      ;
; -0.274 ; strikes[26]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.547      ; 1.919      ;
; -0.272 ; strikes[8]       ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.795      ;
; -0.269 ; wrongs[9]        ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 2.021      ;
; -0.268 ; strikes[15]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.791      ;
; -0.267 ; strikes[6]       ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.790      ;
; -0.259 ; strikes[9]       ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.782      ;
; -0.256 ; strikes[16]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.547      ; 1.901      ;
; -0.253 ; wrongs[8]        ; ledr[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.580      ; 1.992      ;
; -0.251 ; strikes[14]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.774      ;
; -0.249 ; strikes[12]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.772      ;
; -0.248 ; wrongs[7]        ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 1.997      ;
; -0.244 ; wrongs[15]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 1.993      ;
; -0.243 ; wrongs[16]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.975      ;
; -0.241 ; strikes[3]       ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.764      ;
; -0.240 ; wrongs[9]        ; ledr[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.580      ; 1.979      ;
; -0.235 ; wrongs[10]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 1.987      ;
; -0.234 ; wrongs[7]        ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.648      ; 1.995      ;
; -0.230 ; wrongs[15]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.648      ; 1.991      ;
; -0.229 ; wrongs[16]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.631      ; 1.973      ;
; -0.228 ; wrongs[27]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.960      ;
; -0.225 ; wrongs[11]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 1.974      ;
; -0.224 ; strikes[2]       ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.747      ;
; -0.224 ; strikes[5]       ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.747      ;
; -0.218 ; strikes[17]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.547      ; 1.863      ;
; -0.217 ; wrongs[29]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.949      ;
; -0.215 ; wrongs[13]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 1.964      ;
; -0.214 ; wrongs[27]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.631      ; 1.958      ;
; -0.211 ; wrongs[11]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.648      ; 1.972      ;
; -0.206 ; strikes[27]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.547      ; 1.851      ;
; -0.206 ; wrongs[10]       ; ledr[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.580      ; 1.945      ;
; -0.204 ; wrongs[28]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.936      ;
; -0.203 ; wrongs[29]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.631      ; 1.947      ;
; -0.202 ; wrongs[30]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.934      ;
; -0.202 ; wrongs[12]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 1.951      ;
; -0.201 ; wrongs[13]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.648      ; 1.962      ;
; -0.192 ; strikes[7]       ; ledg[0]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.726      ;
; -0.191 ; strikes[4]       ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.714      ;
; -0.190 ; wrongs[26]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.922      ;
; -0.190 ; wrongs[28]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.631      ; 1.934      ;
; -0.189 ; strikes[7]       ; ledg[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.427      ; 1.725      ;
; -0.188 ; wrongs[7]        ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 1.940      ;
; -0.188 ; wrongs[30]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.631      ; 1.932      ;
; -0.188 ; wrongs[12]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.648      ; 1.949      ;
; -0.184 ; wrongs[15]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 1.936      ;
; -0.183 ; wrongs[16]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.918      ;
; -0.176 ; wrongs[26]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.631      ; 1.920      ;
; -0.174 ; wrongs[18]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.906      ;
; -0.174 ; wrongs[14]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 1.923      ;
; -0.173 ; wrongs[24]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.905      ;
; -0.170 ; wrongs[3]        ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 1.919      ;
; -0.169 ; strikes[10]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.692      ;
; -0.168 ; wrongs[27]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.903      ;
; -0.165 ; wrongs[11]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 1.917      ;
; -0.165 ; strikes[28]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.547      ; 1.810      ;
; -0.164 ; wrongs[17]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.896      ;
; -0.160 ; current_state.AX ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.772      ; 2.045      ;
; -0.160 ; wrongs[18]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.631      ; 1.904      ;
; -0.160 ; wrongs[14]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.648      ; 1.921      ;
; -0.159 ; wrongs[7]        ; ledr[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.580      ; 1.898      ;
; -0.159 ; wrongs[24]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.631      ; 1.903      ;
; -0.157 ; wrongs[29]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.892      ;
; -0.156 ; wrongs[3]        ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.648      ; 1.917      ;
; -0.155 ; wrongs[15]       ; ledr[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.580      ; 1.894      ;
; -0.155 ; wrongs[23]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.887      ;
; -0.155 ; wrongs[13]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 1.907      ;
; -0.154 ; wrongs[16]       ; ledr[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.563      ; 1.876      ;
; -0.153 ; wrongs[8]        ; ledr[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.594      ; 1.972      ;
; -0.150 ; wrongs[17]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.631      ; 1.894      ;
; -0.148 ; wrongs[4]        ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 1.897      ;
; -0.147 ; strikes[29]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.547      ; 1.792      ;
; -0.144 ; wrongs[28]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.879      ;
; -0.142 ; wrongs[30]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.877      ;
; -0.142 ; wrongs[12]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 1.894      ;
; -0.141 ; wrongs[23]       ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.631      ; 1.885      ;
; -0.140 ; strikes[11]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.663      ;
; -0.140 ; strikes[26]      ; ledg[0]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.547      ; 1.796      ;
; -0.140 ; wrongs[9]        ; ledr[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.594      ; 1.959      ;
; -0.138 ; strikes[8]       ; ledg[0]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.672      ;
; -0.137 ; strikes[26]      ; ledg[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.549      ; 1.795      ;
; -0.136 ; wrongs[11]       ; ledr[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.580      ; 1.875      ;
; -0.135 ; strikes[8]       ; ledg[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.427      ; 1.671      ;
; -0.134 ; wrongs[31]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.866      ;
; -0.134 ; strikes[15]      ; ledg[0]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.668      ;
; -0.134 ; wrongs[4]        ; ledr[3]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.648      ; 1.895      ;
; -0.133 ; strikes[6]       ; ledg[0]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.667      ;
; -0.133 ; wrongs[25]       ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.865      ;
; -0.132 ; wrongs[5]        ; ledr[5]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.593      ; 1.881      ;
; -0.131 ; strikes[15]      ; ledg[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.427      ; 1.667      ;
; -0.130 ; strikes[6]       ; ledg[1]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.427      ; 1.666      ;
; -0.130 ; wrongs[26]       ; ledr[4]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.576      ; 1.865      ;
; -0.128 ; strikes[13]      ; ledg[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.425      ; 1.651      ;
; -0.126 ; wrongs[13]       ; ledr[2]$latch ; key[0]       ; current_state.A ; 0.500        ; 1.580      ; 1.865      ;
+--------+------------------+---------------+--------------+-----------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'current_state.A'                                                                                     ;
+--------+------------------+---------------+-----------------+-----------------+--------------+------------+------------+
; Slack  ; From Node        ; To Node       ; Launch Clock    ; Latch Clock     ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------+---------------+-----------------+-----------------+--------------+------------+------------+
; -2.134 ; current_state.A  ; ledg[0]$latch ; current_state.A ; current_state.A ; 0.000        ; 2.825      ; 0.832      ;
; -2.011 ; current_state.A  ; ledg[1]$latch ; current_state.A ; current_state.A ; 0.000        ; 2.827      ; 0.957      ;
; -1.991 ; current_state.A  ; ledr[0]$latch ; current_state.A ; current_state.A ; 0.000        ; 2.988      ; 1.138      ;
; -1.885 ; current_state.A  ; ledg[2]$latch ; current_state.A ; current_state.A ; 0.000        ; 2.825      ; 1.081      ;
; -1.676 ; current_state.A  ; ledr[1]$latch ; current_state.A ; current_state.A ; 0.000        ; 2.991      ; 1.456      ;
; -1.642 ; current_state.A  ; ledr[2]$latch ; current_state.A ; current_state.A ; 0.000        ; 2.977      ; 1.476      ;
; -1.634 ; current_state.A  ; ledg[0]$latch ; current_state.A ; current_state.A ; -0.500       ; 2.825      ; 0.832      ;
; -1.511 ; current_state.A  ; ledg[1]$latch ; current_state.A ; current_state.A ; -0.500       ; 2.827      ; 0.957      ;
; -1.491 ; current_state.A  ; ledr[0]$latch ; current_state.A ; current_state.A ; -0.500       ; 2.988      ; 1.138      ;
; -1.415 ; current_state.A  ; ledr[3]$latch ; current_state.A ; current_state.A ; 0.000        ; 3.045      ; 1.771      ;
; -1.415 ; current_state.A  ; ledr[4]$latch ; current_state.A ; current_state.A ; 0.000        ; 2.990      ; 1.716      ;
; -1.414 ; current_state.A  ; ledr[5]$latch ; current_state.A ; current_state.A ; 0.000        ; 2.990      ; 1.717      ;
; -1.385 ; current_state.A  ; ledg[2]$latch ; current_state.A ; current_state.A ; -0.500       ; 2.825      ; 1.081      ;
; -1.176 ; current_state.A  ; ledr[1]$latch ; current_state.A ; current_state.A ; -0.500       ; 2.991      ; 1.456      ;
; -1.142 ; current_state.A  ; ledr[2]$latch ; current_state.A ; current_state.A ; -0.500       ; 2.977      ; 1.476      ;
; -0.915 ; current_state.A  ; ledr[3]$latch ; current_state.A ; current_state.A ; -0.500       ; 3.045      ; 1.771      ;
; -0.915 ; current_state.A  ; ledr[4]$latch ; current_state.A ; current_state.A ; -0.500       ; 2.990      ; 1.716      ;
; -0.914 ; current_state.A  ; ledr[5]$latch ; current_state.A ; current_state.A ; -0.500       ; 2.990      ; 1.717      ;
; -0.280 ; current_state.D  ; ledr[6]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.714      ; 0.934      ;
; -0.264 ; current_state.D  ; ledr[3]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.772      ; 1.008      ;
; -0.162 ; current_state.D  ; ledr[5]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.717      ; 1.055      ;
; -0.160 ; current_state.D  ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.715      ; 1.055      ;
; -0.160 ; current_state.D  ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.717      ; 1.057      ;
; -0.107 ; current_state.V  ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.411      ; 0.804      ;
; -0.099 ; current_state.D  ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.718      ; 1.119      ;
; -0.091 ; strikes[0]       ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.425      ; 0.834      ;
; -0.090 ; strikes[0]       ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.425      ; 0.835      ;
; -0.084 ; strikes[1]       ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.425      ; 0.841      ;
; -0.079 ; wrongs[2]        ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.593      ; 1.014      ;
; -0.075 ; strikes[1]       ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.425      ; 0.850      ;
; -0.071 ; wrongs[2]        ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.591      ; 1.020      ;
; -0.062 ; current_state.D  ; ledr[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.704      ; 1.142      ;
; -0.048 ; current_state.V  ; ledg[3]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.339      ; 0.791      ;
; -0.042 ; current_state.V  ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.409      ; 0.867      ;
; -0.033 ; current_state.V  ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.409      ; 0.876      ;
; 0.000  ; current_state.AX ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.554      ; 1.054      ;
; 0.054  ; current_state.AX ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.552      ; 1.106      ;
; 0.067  ; strikes[1]       ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.427      ; 0.994      ;
; 0.100  ; wrongs[2]        ; ledr[5]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.593      ; 1.193      ;
; 0.126  ; current_state.AX ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.552      ; 1.178      ;
; 0.197  ; current_state.AX ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.715      ; 1.412      ;
; 0.248  ; wrongs[2]        ; ledr[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.580      ; 1.328      ;
; 0.295  ; wrongs[1]        ; ledr[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.580      ; 1.375      ;
; 0.366  ; wrongs[1]        ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.593      ; 1.459      ;
; 0.410  ; wrongs[21]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.576      ; 1.486      ;
; 0.415  ; wrongs[1]        ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.591      ; 1.506      ;
; 0.427  ; wrongs[6]        ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.593      ; 1.520      ;
; 0.438  ; wrongs[0]        ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.593      ; 1.531      ;
; 0.438  ; wrongs[22]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.576      ; 1.514      ;
; 0.452  ; wrongs[19]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.576      ; 1.528      ;
; 0.455  ; wrongs[21]       ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.577      ; 1.532      ;
; 0.459  ; wrongs[21]       ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.574      ; 1.533      ;
; 0.461  ; wrongs[20]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.576      ; 1.537      ;
; 0.463  ; wrongs[1]        ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.594      ; 1.557      ;
; 0.467  ; strikes[25]      ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.549      ; 1.516      ;
; 0.469  ; strikes[25]      ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.547      ; 1.516      ;
; 0.470  ; strikes[25]      ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.547      ; 1.517      ;
; 0.476  ; wrongs[6]        ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.591      ; 1.567      ;
; 0.478  ; wrongs[5]        ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.593      ; 1.571      ;
; 0.479  ; wrongs[25]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.576      ; 1.555      ;
; 0.480  ; wrongs[31]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.576      ; 1.556      ;
; 0.483  ; wrongs[22]       ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.577      ; 1.560      ;
; 0.487  ; wrongs[0]        ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.591      ; 1.578      ;
; 0.487  ; wrongs[22]       ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.574      ; 1.561      ;
; 0.489  ; wrongs[21]       ; ledr[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.563      ; 1.552      ;
; 0.489  ; strikes[24]      ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.549      ; 1.538      ;
; 0.491  ; strikes[24]      ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.547      ; 1.538      ;
; 0.492  ; wrongs[1]        ; ledr[3]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.648      ; 1.640      ;
; 0.492  ; strikes[24]      ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.547      ; 1.539      ;
; 0.493  ; wrongs[1]        ; ledr[5]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.593      ; 1.586      ;
; 0.494  ; wrongs[4]        ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.593      ; 1.587      ;
; 0.495  ; strikes[22]      ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.549      ; 1.544      ;
; 0.497  ; wrongs[19]       ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.577      ; 1.574      ;
; 0.497  ; strikes[22]      ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.547      ; 1.544      ;
; 0.498  ; strikes[22]      ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.547      ; 1.545      ;
; 0.501  ; wrongs[19]       ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.574      ; 1.575      ;
; 0.501  ; wrongs[23]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.576      ; 1.577      ;
; 0.503  ; strikes[21]      ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.549      ; 1.552      ;
; 0.505  ; strikes[21]      ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.547      ; 1.552      ;
; 0.506  ; wrongs[20]       ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.577      ; 1.583      ;
; 0.506  ; strikes[21]      ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.547      ; 1.553      ;
; 0.510  ; wrongs[17]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.576      ; 1.586      ;
; 0.510  ; wrongs[20]       ; ledr[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.574      ; 1.584      ;
; 0.512  ; current_state.AX ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.718      ; 1.730      ;
; 0.516  ; wrongs[3]        ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.593      ; 1.609      ;
; 0.516  ; strikes[20]      ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.549      ; 1.565      ;
; 0.517  ; strikes[30]      ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.549      ; 1.566      ;
; 0.517  ; wrongs[22]       ; ledr[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.563      ; 1.580      ;
; 0.518  ; strikes[20]      ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.547      ; 1.565      ;
; 0.519  ; strikes[30]      ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.547      ; 1.566      ;
; 0.519  ; wrongs[24]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.576      ; 1.595      ;
; 0.519  ; strikes[20]      ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.547      ; 1.566      ;
; 0.520  ; wrongs[14]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.593      ; 1.613      ;
; 0.520  ; strikes[30]      ; ledg[0]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.547      ; 1.567      ;
; 0.520  ; wrongs[18]       ; ledr[4]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.576      ; 1.596      ;
; 0.523  ; strikes[31]      ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.549      ; 1.572      ;
; 0.524  ; wrongs[25]       ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.577      ; 1.601      ;
; 0.524  ; strikes[23]      ; ledg[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.549      ; 1.573      ;
; 0.525  ; wrongs[31]       ; ledr[1]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.577      ; 1.602      ;
; 0.525  ; strikes[31]      ; ledg[2]$latch ; key[0]          ; current_state.A ; -0.500       ; 1.547      ; 1.572      ;
+--------+------------------+---------------+-----------------+-----------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'key[0]'                                                                                            ;
+--------+-----------------+------------------+-----------------+-------------+--------------+------------+------------+
; Slack  ; From Node       ; To Node          ; Launch Clock    ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------+------------------+-----------------+-------------+--------------+------------+------------+
; -1.199 ; current_state.A ; current_state.A  ; current_state.A ; key[0]      ; 0.000        ; 1.273      ; 0.367      ;
; -1.192 ; current_state.A ; atack_count[20]  ; current_state.A ; key[0]      ; 0.000        ; 1.724      ; 0.825      ;
; -1.192 ; current_state.A ; atack_count[21]  ; current_state.A ; key[0]      ; 0.000        ; 1.724      ; 0.825      ;
; -1.192 ; current_state.A ; atack_count[22]  ; current_state.A ; key[0]      ; 0.000        ; 1.724      ; 0.825      ;
; -1.192 ; current_state.A ; atack_count[23]  ; current_state.A ; key[0]      ; 0.000        ; 1.724      ; 0.825      ;
; -1.192 ; current_state.A ; atack_count[24]  ; current_state.A ; key[0]      ; 0.000        ; 1.724      ; 0.825      ;
; -1.192 ; current_state.A ; atack_count[25]  ; current_state.A ; key[0]      ; 0.000        ; 1.724      ; 0.825      ;
; -1.192 ; current_state.A ; atack_count[26]  ; current_state.A ; key[0]      ; 0.000        ; 1.724      ; 0.825      ;
; -1.192 ; current_state.A ; atack_count[27]  ; current_state.A ; key[0]      ; 0.000        ; 1.724      ; 0.825      ;
; -1.192 ; current_state.A ; atack_count[28]  ; current_state.A ; key[0]      ; 0.000        ; 1.724      ; 0.825      ;
; -1.192 ; current_state.A ; atack_count[29]  ; current_state.A ; key[0]      ; 0.000        ; 1.724      ; 0.825      ;
; -1.192 ; current_state.A ; atack_count[30]  ; current_state.A ; key[0]      ; 0.000        ; 1.724      ; 0.825      ;
; -1.192 ; current_state.A ; atack_count[31]  ; current_state.A ; key[0]      ; 0.000        ; 1.724      ; 0.825      ;
; -0.972 ; current_state.A ; current_state.V  ; current_state.A ; key[0]      ; 0.000        ; 1.416      ; 0.737      ;
; -0.887 ; current_state.A ; atack_count[0]   ; current_state.A ; key[0]      ; 0.000        ; 1.442      ; 0.848      ;
; -0.887 ; current_state.A ; atack_count[3]   ; current_state.A ; key[0]      ; 0.000        ; 1.442      ; 0.848      ;
; -0.887 ; current_state.A ; atack_count[4]   ; current_state.A ; key[0]      ; 0.000        ; 1.442      ; 0.848      ;
; -0.887 ; current_state.A ; atack_count[5]   ; current_state.A ; key[0]      ; 0.000        ; 1.442      ; 0.848      ;
; -0.887 ; current_state.A ; atack_count[6]   ; current_state.A ; key[0]      ; 0.000        ; 1.442      ; 0.848      ;
; -0.887 ; current_state.A ; atack_count[7]   ; current_state.A ; key[0]      ; 0.000        ; 1.442      ; 0.848      ;
; -0.851 ; current_state.A ; atack_count[16]  ; current_state.A ; key[0]      ; 0.000        ; 1.513      ; 0.955      ;
; -0.851 ; current_state.A ; atack_count[17]  ; current_state.A ; key[0]      ; 0.000        ; 1.513      ; 0.955      ;
; -0.851 ; current_state.A ; atack_count[18]  ; current_state.A ; key[0]      ; 0.000        ; 1.513      ; 0.955      ;
; -0.851 ; current_state.A ; atack_count[19]  ; current_state.A ; key[0]      ; 0.000        ; 1.513      ; 0.955      ;
; -0.819 ; current_state.A ; atack_count[2]   ; current_state.A ; key[0]      ; 0.000        ; 1.450      ; 0.924      ;
; -0.815 ; current_state.A ; atack_count[8]   ; current_state.A ; key[0]      ; 0.000        ; 1.455      ; 0.933      ;
; -0.815 ; current_state.A ; atack_count[9]   ; current_state.A ; key[0]      ; 0.000        ; 1.455      ; 0.933      ;
; -0.815 ; current_state.A ; atack_count[10]  ; current_state.A ; key[0]      ; 0.000        ; 1.455      ; 0.933      ;
; -0.815 ; current_state.A ; atack_count[11]  ; current_state.A ; key[0]      ; 0.000        ; 1.455      ; 0.933      ;
; -0.815 ; current_state.A ; atack_count[12]  ; current_state.A ; key[0]      ; 0.000        ; 1.455      ; 0.933      ;
; -0.815 ; current_state.A ; atack_count[13]  ; current_state.A ; key[0]      ; 0.000        ; 1.455      ; 0.933      ;
; -0.815 ; current_state.A ; atack_count[14]  ; current_state.A ; key[0]      ; 0.000        ; 1.455      ; 0.933      ;
; -0.815 ; current_state.A ; atack_count[15]  ; current_state.A ; key[0]      ; 0.000        ; 1.455      ; 0.933      ;
; -0.796 ; current_state.A ; atack_count[1]   ; current_state.A ; key[0]      ; 0.000        ; 1.450      ; 0.947      ;
; -0.699 ; current_state.A ; current_state.A  ; current_state.A ; key[0]      ; -0.500       ; 1.273      ; 0.367      ;
; -0.692 ; current_state.A ; atack_count[20]  ; current_state.A ; key[0]      ; -0.500       ; 1.724      ; 0.825      ;
; -0.692 ; current_state.A ; atack_count[21]  ; current_state.A ; key[0]      ; -0.500       ; 1.724      ; 0.825      ;
; -0.692 ; current_state.A ; atack_count[22]  ; current_state.A ; key[0]      ; -0.500       ; 1.724      ; 0.825      ;
; -0.692 ; current_state.A ; atack_count[23]  ; current_state.A ; key[0]      ; -0.500       ; 1.724      ; 0.825      ;
; -0.692 ; current_state.A ; atack_count[24]  ; current_state.A ; key[0]      ; -0.500       ; 1.724      ; 0.825      ;
; -0.692 ; current_state.A ; atack_count[25]  ; current_state.A ; key[0]      ; -0.500       ; 1.724      ; 0.825      ;
; -0.692 ; current_state.A ; atack_count[26]  ; current_state.A ; key[0]      ; -0.500       ; 1.724      ; 0.825      ;
; -0.692 ; current_state.A ; atack_count[27]  ; current_state.A ; key[0]      ; -0.500       ; 1.724      ; 0.825      ;
; -0.692 ; current_state.A ; atack_count[28]  ; current_state.A ; key[0]      ; -0.500       ; 1.724      ; 0.825      ;
; -0.692 ; current_state.A ; atack_count[29]  ; current_state.A ; key[0]      ; -0.500       ; 1.724      ; 0.825      ;
; -0.692 ; current_state.A ; atack_count[30]  ; current_state.A ; key[0]      ; -0.500       ; 1.724      ; 0.825      ;
; -0.692 ; current_state.A ; atack_count[31]  ; current_state.A ; key[0]      ; -0.500       ; 1.724      ; 0.825      ;
; -0.531 ; current_state.A ; strikes[16]      ; current_state.A ; key[0]      ; 0.000        ; 1.278      ; 1.040      ;
; -0.531 ; current_state.A ; strikes[17]      ; current_state.A ; key[0]      ; 0.000        ; 1.278      ; 1.040      ;
; -0.531 ; current_state.A ; strikes[18]      ; current_state.A ; key[0]      ; 0.000        ; 1.278      ; 1.040      ;
; -0.531 ; current_state.A ; strikes[19]      ; current_state.A ; key[0]      ; 0.000        ; 1.278      ; 1.040      ;
; -0.531 ; current_state.A ; strikes[20]      ; current_state.A ; key[0]      ; 0.000        ; 1.278      ; 1.040      ;
; -0.531 ; current_state.A ; strikes[21]      ; current_state.A ; key[0]      ; 0.000        ; 1.278      ; 1.040      ;
; -0.531 ; current_state.A ; strikes[22]      ; current_state.A ; key[0]      ; 0.000        ; 1.278      ; 1.040      ;
; -0.531 ; current_state.A ; strikes[23]      ; current_state.A ; key[0]      ; 0.000        ; 1.278      ; 1.040      ;
; -0.531 ; current_state.A ; strikes[24]      ; current_state.A ; key[0]      ; 0.000        ; 1.278      ; 1.040      ;
; -0.531 ; current_state.A ; strikes[25]      ; current_state.A ; key[0]      ; 0.000        ; 1.278      ; 1.040      ;
; -0.531 ; current_state.A ; strikes[26]      ; current_state.A ; key[0]      ; 0.000        ; 1.278      ; 1.040      ;
; -0.531 ; current_state.A ; strikes[27]      ; current_state.A ; key[0]      ; 0.000        ; 1.278      ; 1.040      ;
; -0.531 ; current_state.A ; strikes[28]      ; current_state.A ; key[0]      ; 0.000        ; 1.278      ; 1.040      ;
; -0.531 ; current_state.A ; strikes[29]      ; current_state.A ; key[0]      ; 0.000        ; 1.278      ; 1.040      ;
; -0.531 ; current_state.A ; strikes[30]      ; current_state.A ; key[0]      ; 0.000        ; 1.278      ; 1.040      ;
; -0.531 ; current_state.A ; strikes[31]      ; current_state.A ; key[0]      ; 0.000        ; 1.278      ; 1.040      ;
; -0.526 ; current_state.A ; strikes[0]       ; current_state.A ; key[0]      ; 0.000        ; 1.400      ; 1.167      ;
; -0.526 ; current_state.A ; strikes[1]       ; current_state.A ; key[0]      ; 0.000        ; 1.400      ; 1.167      ;
; -0.526 ; current_state.A ; strikes[2]       ; current_state.A ; key[0]      ; 0.000        ; 1.400      ; 1.167      ;
; -0.526 ; current_state.A ; strikes[3]       ; current_state.A ; key[0]      ; 0.000        ; 1.400      ; 1.167      ;
; -0.526 ; current_state.A ; strikes[4]       ; current_state.A ; key[0]      ; 0.000        ; 1.400      ; 1.167      ;
; -0.526 ; current_state.A ; strikes[5]       ; current_state.A ; key[0]      ; 0.000        ; 1.400      ; 1.167      ;
; -0.526 ; current_state.A ; strikes[6]       ; current_state.A ; key[0]      ; 0.000        ; 1.400      ; 1.167      ;
; -0.526 ; current_state.A ; strikes[7]       ; current_state.A ; key[0]      ; 0.000        ; 1.400      ; 1.167      ;
; -0.526 ; current_state.A ; strikes[8]       ; current_state.A ; key[0]      ; 0.000        ; 1.400      ; 1.167      ;
; -0.526 ; current_state.A ; strikes[9]       ; current_state.A ; key[0]      ; 0.000        ; 1.400      ; 1.167      ;
; -0.526 ; current_state.A ; strikes[10]      ; current_state.A ; key[0]      ; 0.000        ; 1.400      ; 1.167      ;
; -0.526 ; current_state.A ; strikes[11]      ; current_state.A ; key[0]      ; 0.000        ; 1.400      ; 1.167      ;
; -0.526 ; current_state.A ; strikes[12]      ; current_state.A ; key[0]      ; 0.000        ; 1.400      ; 1.167      ;
; -0.526 ; current_state.A ; strikes[13]      ; current_state.A ; key[0]      ; 0.000        ; 1.400      ; 1.167      ;
; -0.526 ; current_state.A ; strikes[14]      ; current_state.A ; key[0]      ; 0.000        ; 1.400      ; 1.167      ;
; -0.526 ; current_state.A ; strikes[15]      ; current_state.A ; key[0]      ; 0.000        ; 1.400      ; 1.167      ;
; -0.518 ; current_state.A ; wrongs[16]       ; current_state.A ; key[0]      ; 0.000        ; 1.414      ; 1.189      ;
; -0.518 ; current_state.A ; wrongs[17]       ; current_state.A ; key[0]      ; 0.000        ; 1.414      ; 1.189      ;
; -0.518 ; current_state.A ; wrongs[18]       ; current_state.A ; key[0]      ; 0.000        ; 1.414      ; 1.189      ;
; -0.518 ; current_state.A ; wrongs[19]       ; current_state.A ; key[0]      ; 0.000        ; 1.414      ; 1.189      ;
; -0.518 ; current_state.A ; wrongs[20]       ; current_state.A ; key[0]      ; 0.000        ; 1.414      ; 1.189      ;
; -0.518 ; current_state.A ; wrongs[21]       ; current_state.A ; key[0]      ; 0.000        ; 1.414      ; 1.189      ;
; -0.518 ; current_state.A ; wrongs[22]       ; current_state.A ; key[0]      ; 0.000        ; 1.414      ; 1.189      ;
; -0.518 ; current_state.A ; wrongs[23]       ; current_state.A ; key[0]      ; 0.000        ; 1.414      ; 1.189      ;
; -0.518 ; current_state.A ; wrongs[24]       ; current_state.A ; key[0]      ; 0.000        ; 1.414      ; 1.189      ;
; -0.518 ; current_state.A ; wrongs[25]       ; current_state.A ; key[0]      ; 0.000        ; 1.414      ; 1.189      ;
; -0.518 ; current_state.A ; wrongs[26]       ; current_state.A ; key[0]      ; 0.000        ; 1.414      ; 1.189      ;
; -0.518 ; current_state.A ; wrongs[27]       ; current_state.A ; key[0]      ; 0.000        ; 1.414      ; 1.189      ;
; -0.518 ; current_state.A ; wrongs[28]       ; current_state.A ; key[0]      ; 0.000        ; 1.414      ; 1.189      ;
; -0.518 ; current_state.A ; wrongs[29]       ; current_state.A ; key[0]      ; 0.000        ; 1.414      ; 1.189      ;
; -0.518 ; current_state.A ; wrongs[30]       ; current_state.A ; key[0]      ; 0.000        ; 1.414      ; 1.189      ;
; -0.518 ; current_state.A ; wrongs[31]       ; current_state.A ; key[0]      ; 0.000        ; 1.414      ; 1.189      ;
; -0.515 ; current_state.A ; current_state.AX ; current_state.A ; key[0]      ; 0.000        ; 1.273      ; 1.051      ;
; -0.510 ; current_state.A ; wrongs[0]        ; current_state.A ; key[0]      ; 0.000        ; 1.397      ; 1.180      ;
; -0.510 ; current_state.A ; wrongs[1]        ; current_state.A ; key[0]      ; 0.000        ; 1.397      ; 1.180      ;
; -0.510 ; current_state.A ; wrongs[2]        ; current_state.A ; key[0]      ; 0.000        ; 1.397      ; 1.180      ;
; -0.510 ; current_state.A ; wrongs[3]        ; current_state.A ; key[0]      ; 0.000        ; 1.397      ; 1.180      ;
+--------+-----------------+------------------+-----------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'key[0]'                                                             ;
+--------+--------------+----------------+------------------+--------+------------+--------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock  ; Clock Edge ; Target             ;
+--------+--------------+----------------+------------------+--------+------------+--------------------+
; -1.222 ; 1.000        ; 2.222          ; Port Rate        ; key[0] ; Rise       ; key[0]             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[0]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[0]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[10]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[10]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[11]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[11]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[12]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[12]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[13]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[13]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[14]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[14]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[15]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[15]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[16]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[16]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[17]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[17]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[18]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[18]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[19]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[19]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[1]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[1]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[20]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[20]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[21]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[21]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[22]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[22]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[23]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[23]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[24]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[24]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[25]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[25]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[26]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[26]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[27]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[27]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[28]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[28]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[29]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[29]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[2]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[2]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[30]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[30]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[31]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[31]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[3]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[3]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[4]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[4]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[5]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[5]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[6]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[6]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[7]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[7]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[8]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[8]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; atack_count[9]     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; atack_count[9]     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; current_state.A    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; current_state.A    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; current_state.AX   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; current_state.AX   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; current_state.D    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; current_state.D    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; current_state.NA   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; current_state.NA   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; current_state.NB   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; current_state.NB   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; current_state.V    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; current_state.V    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; position_a[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; position_a[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; position_a[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; position_a[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; position_a[2]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; position_a[2]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; position_a[3]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; position_a[3]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; position_a_cod[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; position_a_cod[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; position_a_cod[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; position_a_cod[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; position_a_cod[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; position_a_cod[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; position_a_cod[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; position_a_cod[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; position_b1_cod[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; position_b1_cod[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; position_b1_cod[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; position_b1_cod[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; position_b1_cod[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; key[0] ; Fall       ; position_b1_cod[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; key[0] ; Fall       ; position_b1_cod[3] ;
+--------+--------------+----------------+------------------+--------+------------+--------------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'current_state.A'                                                                       ;
+-------+--------------+----------------+------------------+-----------------+------------+-------------------------------+
; Slack ; Actual Width ; Required Width ; Type             ; Clock           ; Clock Edge ; Target                        ;
+-------+--------------+----------------+------------------+-----------------+------------+-------------------------------+
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; Selector0~2clkctrl|inclk[0]   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; Selector0~2clkctrl|inclk[0]   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; Selector0~2clkctrl|outclk     ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; Selector0~2clkctrl|outclk     ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; Selector0~2|combout           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; Selector0~2|combout           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; Selector0~2|datab             ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; Selector0~2|datab             ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; Selector117~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; Selector117~0|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; Selector117~0|datab           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; Selector117~0|datab           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; Selector117~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; Selector117~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; Selector117~1|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; Selector117~1|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; Selector132~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; Selector132~1clkctrl|inclk[0] ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; Selector132~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; Selector132~1clkctrl|outclk   ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; Selector132~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; Selector132~1|combout         ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; Selector132~1|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; Selector132~1|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; current_state.A|regout        ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; current_state.A|regout        ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; hex1~0|combout                ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; hex1~0|combout                ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; hex1~0|datad                  ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; hex1~0|datad                  ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledg[0]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledg[0]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledg[0]$latch|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledg[0]$latch|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledg[1]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledg[1]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledg[1]$latch|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledg[1]$latch|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledg[2]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledg[2]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledg[2]$latch|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledg[2]$latch|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledg[3]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledg[3]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledg[3]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledg[3]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledr[0]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledr[0]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledr[0]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledr[0]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledr[1]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledr[1]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledr[1]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledr[1]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledr[2]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledr[2]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledr[2]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledr[2]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledr[3]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledr[3]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledr[3]$latch|datac           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledr[3]$latch|datac           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledr[4]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledr[4]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledr[4]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledr[4]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledr[5]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledr[5]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledr[5]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledr[5]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Rise       ; ledr[6]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Rise       ; ledr[6]$latch                 ;
; 0.500 ; 0.500        ; 0.000          ; High Pulse Width ; current_state.A ; Fall       ; ledr[6]$latch|datad           ;
; 0.500 ; 0.500        ; 0.000          ; Low Pulse Width  ; current_state.A ; Fall       ; ledr[6]$latch|datad           ;
+-------+--------------+----------------+------------------+-----------------+------------+-------------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; key[*]    ; key[0]     ; 3.351 ; 3.351 ; Fall       ; key[0]          ;
;  key[1]   ; key[0]     ; 3.351 ; 3.351 ; Fall       ; key[0]          ;
; sw[*]     ; key[0]     ; 1.681 ; 1.681 ; Fall       ; key[0]          ;
;  sw[0]    ; key[0]     ; 1.322 ; 1.322 ; Fall       ; key[0]          ;
;  sw[1]    ; key[0]     ; 1.401 ; 1.401 ; Fall       ; key[0]          ;
;  sw[2]    ; key[0]     ; 1.514 ; 1.514 ; Fall       ; key[0]          ;
;  sw[3]    ; key[0]     ; 1.681 ; 1.681 ; Fall       ; key[0]          ;
;  sw[4]    ; key[0]     ; 1.489 ; 1.489 ; Fall       ; key[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; key[*]    ; key[0]     ; -1.885 ; -1.885 ; Fall       ; key[0]          ;
;  key[1]   ; key[0]     ; -1.885 ; -1.885 ; Fall       ; key[0]          ;
; sw[*]     ; key[0]     ; 0.217  ; 0.217  ; Fall       ; key[0]          ;
;  sw[0]    ; key[0]     ; 0.217  ; 0.217  ; Fall       ; key[0]          ;
;  sw[1]    ; key[0]     ; 0.205  ; 0.205  ; Fall       ; key[0]          ;
;  sw[2]    ; key[0]     ; 0.041  ; 0.041  ; Fall       ; key[0]          ;
;  sw[3]    ; key[0]     ; -0.114 ; -0.114 ; Fall       ; key[0]          ;
;  sw[4]    ; key[0]     ; -0.593 ; -0.593 ; Fall       ; key[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------+
; Clock to Output Times                                                      ;
+-----------+-----------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port      ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+-----------------+-------+-------+------------+-----------------+
; hex0[*]   ; current_state.A ; 4.345 ;       ; Rise       ; current_state.A ;
;  hex0[0]  ; current_state.A ; 3.737 ;       ; Rise       ; current_state.A ;
;  hex0[1]  ; current_state.A ; 3.579 ;       ; Rise       ; current_state.A ;
;  hex0[2]  ; current_state.A ; 4.323 ;       ; Rise       ; current_state.A ;
;  hex0[3]  ; current_state.A ; 3.698 ;       ; Rise       ; current_state.A ;
;  hex0[4]  ; current_state.A ; 3.261 ;       ; Rise       ; current_state.A ;
;  hex0[5]  ; current_state.A ; 3.952 ;       ; Rise       ; current_state.A ;
;  hex0[6]  ; current_state.A ; 4.345 ;       ; Rise       ; current_state.A ;
; hex1[*]   ; current_state.A ; 4.181 ;       ; Rise       ; current_state.A ;
;  hex1[0]  ; current_state.A ; 4.181 ;       ; Rise       ; current_state.A ;
;  hex1[2]  ; current_state.A ; 4.136 ;       ; Rise       ; current_state.A ;
;  hex1[3]  ; current_state.A ; 4.146 ;       ; Rise       ; current_state.A ;
;  hex1[5]  ; current_state.A ; 4.166 ;       ; Rise       ; current_state.A ;
;  hex1[6]  ; current_state.A ; 4.166 ;       ; Rise       ; current_state.A ;
; hex2[*]   ; current_state.A ; 4.152 ;       ; Rise       ; current_state.A ;
;  hex2[0]  ; current_state.A ; 4.126 ;       ; Rise       ; current_state.A ;
;  hex2[1]  ; current_state.A ; 4.112 ;       ; Rise       ; current_state.A ;
;  hex2[2]  ; current_state.A ; 4.152 ;       ; Rise       ; current_state.A ;
;  hex2[3]  ; current_state.A ; 4.152 ;       ; Rise       ; current_state.A ;
;  hex2[4]  ; current_state.A ; 3.998 ;       ; Rise       ; current_state.A ;
;  hex2[5]  ; current_state.A ; 3.988 ;       ; Rise       ; current_state.A ;
; ledg[*]   ; current_state.A ; 4.788 ; 4.788 ; Rise       ; current_state.A ;
;  ledg[0]  ; current_state.A ; 4.707 ; 4.707 ; Rise       ; current_state.A ;
;  ledg[1]  ; current_state.A ; 4.686 ; 4.686 ; Rise       ; current_state.A ;
;  ledg[2]  ; current_state.A ; 4.680 ; 4.680 ; Rise       ; current_state.A ;
;  ledg[3]  ; current_state.A ; 4.765 ; 4.765 ; Rise       ; current_state.A ;
;  ledg[4]  ; current_state.A ; 4.783 ; 4.783 ; Rise       ; current_state.A ;
;  ledg[5]  ; current_state.A ; 4.788 ; 4.788 ; Rise       ; current_state.A ;
;  ledg[6]  ; current_state.A ; 4.785 ; 4.785 ; Rise       ; current_state.A ;
;  ledg[7]  ; current_state.A ; 4.785 ; 4.785 ; Rise       ; current_state.A ;
;  ledg[8]  ; current_state.A ; 4.763 ; 4.763 ; Rise       ; current_state.A ;
;  ledg[9]  ; current_state.A ; 4.434 ; 4.434 ; Rise       ; current_state.A ;
; ledr[*]   ; current_state.A ; 5.075 ; 5.075 ; Rise       ; current_state.A ;
;  ledr[0]  ; current_state.A ; 4.916 ; 4.916 ; Rise       ; current_state.A ;
;  ledr[1]  ; current_state.A ; 4.882 ; 4.882 ; Rise       ; current_state.A ;
;  ledr[2]  ; current_state.A ; 4.959 ; 4.959 ; Rise       ; current_state.A ;
;  ledr[3]  ; current_state.A ; 4.905 ; 4.905 ; Rise       ; current_state.A ;
;  ledr[4]  ; current_state.A ; 5.020 ; 5.020 ; Rise       ; current_state.A ;
;  ledr[5]  ; current_state.A ; 5.075 ; 5.075 ; Rise       ; current_state.A ;
;  ledr[6]  ; current_state.A ; 4.841 ; 4.841 ; Rise       ; current_state.A ;
;  ledr[7]  ; current_state.A ; 4.972 ; 4.972 ; Rise       ; current_state.A ;
;  ledr[8]  ; current_state.A ; 4.821 ; 4.821 ; Rise       ; current_state.A ;
;  ledr[9]  ; current_state.A ; 4.782 ; 4.782 ; Rise       ; current_state.A ;
; hex0[*]   ; current_state.A ;       ; 4.345 ; Fall       ; current_state.A ;
;  hex0[0]  ; current_state.A ;       ; 3.737 ; Fall       ; current_state.A ;
;  hex0[1]  ; current_state.A ;       ; 3.579 ; Fall       ; current_state.A ;
;  hex0[2]  ; current_state.A ;       ; 4.323 ; Fall       ; current_state.A ;
;  hex0[3]  ; current_state.A ;       ; 3.698 ; Fall       ; current_state.A ;
;  hex0[4]  ; current_state.A ;       ; 3.261 ; Fall       ; current_state.A ;
;  hex0[5]  ; current_state.A ;       ; 3.952 ; Fall       ; current_state.A ;
;  hex0[6]  ; current_state.A ;       ; 4.345 ; Fall       ; current_state.A ;
; hex1[*]   ; current_state.A ;       ; 4.181 ; Fall       ; current_state.A ;
;  hex1[0]  ; current_state.A ;       ; 4.181 ; Fall       ; current_state.A ;
;  hex1[2]  ; current_state.A ;       ; 4.136 ; Fall       ; current_state.A ;
;  hex1[3]  ; current_state.A ;       ; 4.146 ; Fall       ; current_state.A ;
;  hex1[5]  ; current_state.A ;       ; 4.166 ; Fall       ; current_state.A ;
;  hex1[6]  ; current_state.A ;       ; 4.166 ; Fall       ; current_state.A ;
; hex2[*]   ; current_state.A ;       ; 4.152 ; Fall       ; current_state.A ;
;  hex2[0]  ; current_state.A ;       ; 4.126 ; Fall       ; current_state.A ;
;  hex2[1]  ; current_state.A ;       ; 4.112 ; Fall       ; current_state.A ;
;  hex2[2]  ; current_state.A ;       ; 4.152 ; Fall       ; current_state.A ;
;  hex2[3]  ; current_state.A ;       ; 4.152 ; Fall       ; current_state.A ;
;  hex2[4]  ; current_state.A ;       ; 3.998 ; Fall       ; current_state.A ;
;  hex2[5]  ; current_state.A ;       ; 3.988 ; Fall       ; current_state.A ;
; hex0[*]   ; key[0]          ; 7.416 ; 7.416 ; Fall       ; key[0]          ;
;  hex0[0]  ; key[0]          ; 6.808 ; 6.808 ; Fall       ; key[0]          ;
;  hex0[1]  ; key[0]          ; 6.655 ; 6.655 ; Fall       ; key[0]          ;
;  hex0[2]  ; key[0]          ; 7.326 ; 7.326 ; Fall       ; key[0]          ;
;  hex0[3]  ; key[0]          ; 6.769 ; 6.769 ; Fall       ; key[0]          ;
;  hex0[4]  ; key[0]          ; 6.572 ; 6.572 ; Fall       ; key[0]          ;
;  hex0[5]  ; key[0]          ; 7.023 ; 7.023 ; Fall       ; key[0]          ;
;  hex0[6]  ; key[0]          ; 7.416 ; 7.416 ; Fall       ; key[0]          ;
; hex1[*]   ; key[0]          ; 5.869 ; 5.869 ; Fall       ; key[0]          ;
;  hex1[0]  ; key[0]          ; 5.869 ; 5.869 ; Fall       ; key[0]          ;
;  hex1[1]  ; key[0]          ; 4.672 ; 4.672 ; Fall       ; key[0]          ;
;  hex1[2]  ; key[0]          ; 5.824 ; 5.824 ; Fall       ; key[0]          ;
;  hex1[3]  ; key[0]          ; 5.834 ; 5.834 ; Fall       ; key[0]          ;
;  hex1[4]  ; key[0]          ; 4.692 ; 4.692 ; Fall       ; key[0]          ;
;  hex1[5]  ; key[0]          ; 5.854 ; 5.854 ; Fall       ; key[0]          ;
;  hex1[6]  ; key[0]          ; 5.854 ; 5.854 ; Fall       ; key[0]          ;
; hex2[*]   ; key[0]          ; 5.840 ; 5.840 ; Fall       ; key[0]          ;
;  hex2[0]  ; key[0]          ; 5.814 ; 5.814 ; Fall       ; key[0]          ;
;  hex2[1]  ; key[0]          ; 5.800 ; 5.800 ; Fall       ; key[0]          ;
;  hex2[2]  ; key[0]          ; 5.840 ; 5.840 ; Fall       ; key[0]          ;
;  hex2[3]  ; key[0]          ; 5.840 ; 5.840 ; Fall       ; key[0]          ;
;  hex2[4]  ; key[0]          ; 5.686 ; 5.686 ; Fall       ; key[0]          ;
;  hex2[5]  ; key[0]          ; 5.676 ; 5.676 ; Fall       ; key[0]          ;
;  hex2[6]  ; key[0]          ; 4.532 ; 4.532 ; Fall       ; key[0]          ;
; hex3[*]   ; key[0]          ; 5.612 ; 5.612 ; Fall       ; key[0]          ;
;  hex3[0]  ; key[0]          ; 5.209 ; 5.209 ; Fall       ; key[0]          ;
;  hex3[1]  ; key[0]          ; 5.336 ; 5.336 ; Fall       ; key[0]          ;
;  hex3[2]  ; key[0]          ; 5.364 ; 5.364 ; Fall       ; key[0]          ;
;  hex3[3]  ; key[0]          ; 5.612 ; 5.612 ; Fall       ; key[0]          ;
;  hex3[6]  ; key[0]          ; 4.991 ; 4.991 ; Fall       ; key[0]          ;
+-----------+-----------------+-------+-------+------------+-----------------+


+----------------------------------------------------------------------------+
; Minimum Clock to Output Times                                              ;
+-----------+-----------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port      ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+-----------------+-------+-------+------------+-----------------+
; hex0[*]   ; current_state.A ; 3.261 ;       ; Rise       ; current_state.A ;
;  hex0[0]  ; current_state.A ; 3.737 ;       ; Rise       ; current_state.A ;
;  hex0[1]  ; current_state.A ; 3.579 ;       ; Rise       ; current_state.A ;
;  hex0[2]  ; current_state.A ; 4.323 ;       ; Rise       ; current_state.A ;
;  hex0[3]  ; current_state.A ; 3.698 ;       ; Rise       ; current_state.A ;
;  hex0[4]  ; current_state.A ; 3.261 ;       ; Rise       ; current_state.A ;
;  hex0[5]  ; current_state.A ; 3.952 ;       ; Rise       ; current_state.A ;
;  hex0[6]  ; current_state.A ; 4.345 ;       ; Rise       ; current_state.A ;
; hex1[*]   ; current_state.A ; 4.136 ;       ; Rise       ; current_state.A ;
;  hex1[0]  ; current_state.A ; 4.181 ;       ; Rise       ; current_state.A ;
;  hex1[2]  ; current_state.A ; 4.136 ;       ; Rise       ; current_state.A ;
;  hex1[3]  ; current_state.A ; 4.146 ;       ; Rise       ; current_state.A ;
;  hex1[5]  ; current_state.A ; 4.166 ;       ; Rise       ; current_state.A ;
;  hex1[6]  ; current_state.A ; 4.166 ;       ; Rise       ; current_state.A ;
; hex2[*]   ; current_state.A ; 3.988 ;       ; Rise       ; current_state.A ;
;  hex2[0]  ; current_state.A ; 4.126 ;       ; Rise       ; current_state.A ;
;  hex2[1]  ; current_state.A ; 4.112 ;       ; Rise       ; current_state.A ;
;  hex2[2]  ; current_state.A ; 4.152 ;       ; Rise       ; current_state.A ;
;  hex2[3]  ; current_state.A ; 4.152 ;       ; Rise       ; current_state.A ;
;  hex2[4]  ; current_state.A ; 3.998 ;       ; Rise       ; current_state.A ;
;  hex2[5]  ; current_state.A ; 3.988 ;       ; Rise       ; current_state.A ;
; ledg[*]   ; current_state.A ; 4.434 ; 4.434 ; Rise       ; current_state.A ;
;  ledg[0]  ; current_state.A ; 4.707 ; 4.707 ; Rise       ; current_state.A ;
;  ledg[1]  ; current_state.A ; 4.686 ; 4.686 ; Rise       ; current_state.A ;
;  ledg[2]  ; current_state.A ; 4.680 ; 4.680 ; Rise       ; current_state.A ;
;  ledg[3]  ; current_state.A ; 4.765 ; 4.765 ; Rise       ; current_state.A ;
;  ledg[4]  ; current_state.A ; 4.783 ; 4.783 ; Rise       ; current_state.A ;
;  ledg[5]  ; current_state.A ; 4.788 ; 4.788 ; Rise       ; current_state.A ;
;  ledg[6]  ; current_state.A ; 4.785 ; 4.785 ; Rise       ; current_state.A ;
;  ledg[7]  ; current_state.A ; 4.785 ; 4.785 ; Rise       ; current_state.A ;
;  ledg[8]  ; current_state.A ; 4.763 ; 4.763 ; Rise       ; current_state.A ;
;  ledg[9]  ; current_state.A ; 4.434 ; 4.434 ; Rise       ; current_state.A ;
; ledr[*]   ; current_state.A ; 4.782 ; 4.782 ; Rise       ; current_state.A ;
;  ledr[0]  ; current_state.A ; 4.916 ; 4.916 ; Rise       ; current_state.A ;
;  ledr[1]  ; current_state.A ; 4.882 ; 4.882 ; Rise       ; current_state.A ;
;  ledr[2]  ; current_state.A ; 4.959 ; 4.959 ; Rise       ; current_state.A ;
;  ledr[3]  ; current_state.A ; 4.905 ; 4.905 ; Rise       ; current_state.A ;
;  ledr[4]  ; current_state.A ; 5.020 ; 5.020 ; Rise       ; current_state.A ;
;  ledr[5]  ; current_state.A ; 5.075 ; 5.075 ; Rise       ; current_state.A ;
;  ledr[6]  ; current_state.A ; 4.841 ; 4.841 ; Rise       ; current_state.A ;
;  ledr[7]  ; current_state.A ; 4.972 ; 4.972 ; Rise       ; current_state.A ;
;  ledr[8]  ; current_state.A ; 4.821 ; 4.821 ; Rise       ; current_state.A ;
;  ledr[9]  ; current_state.A ; 4.782 ; 4.782 ; Rise       ; current_state.A ;
; hex0[*]   ; current_state.A ;       ; 3.261 ; Fall       ; current_state.A ;
;  hex0[0]  ; current_state.A ;       ; 3.737 ; Fall       ; current_state.A ;
;  hex0[1]  ; current_state.A ;       ; 3.579 ; Fall       ; current_state.A ;
;  hex0[2]  ; current_state.A ;       ; 4.323 ; Fall       ; current_state.A ;
;  hex0[3]  ; current_state.A ;       ; 3.698 ; Fall       ; current_state.A ;
;  hex0[4]  ; current_state.A ;       ; 3.261 ; Fall       ; current_state.A ;
;  hex0[5]  ; current_state.A ;       ; 3.952 ; Fall       ; current_state.A ;
;  hex0[6]  ; current_state.A ;       ; 4.345 ; Fall       ; current_state.A ;
; hex1[*]   ; current_state.A ;       ; 4.136 ; Fall       ; current_state.A ;
;  hex1[0]  ; current_state.A ;       ; 4.181 ; Fall       ; current_state.A ;
;  hex1[2]  ; current_state.A ;       ; 4.136 ; Fall       ; current_state.A ;
;  hex1[3]  ; current_state.A ;       ; 4.146 ; Fall       ; current_state.A ;
;  hex1[5]  ; current_state.A ;       ; 4.166 ; Fall       ; current_state.A ;
;  hex1[6]  ; current_state.A ;       ; 4.166 ; Fall       ; current_state.A ;
; hex2[*]   ; current_state.A ;       ; 3.988 ; Fall       ; current_state.A ;
;  hex2[0]  ; current_state.A ;       ; 4.126 ; Fall       ; current_state.A ;
;  hex2[1]  ; current_state.A ;       ; 4.112 ; Fall       ; current_state.A ;
;  hex2[2]  ; current_state.A ;       ; 4.152 ; Fall       ; current_state.A ;
;  hex2[3]  ; current_state.A ;       ; 4.152 ; Fall       ; current_state.A ;
;  hex2[4]  ; current_state.A ;       ; 3.998 ; Fall       ; current_state.A ;
;  hex2[5]  ; current_state.A ;       ; 3.988 ; Fall       ; current_state.A ;
; hex0[*]   ; key[0]          ; 4.742 ; 4.742 ; Fall       ; key[0]          ;
;  hex0[0]  ; key[0]          ; 5.332 ; 5.332 ; Fall       ; key[0]          ;
;  hex0[1]  ; key[0]          ; 4.992 ; 4.992 ; Fall       ; key[0]          ;
;  hex0[2]  ; key[0]          ; 5.986 ; 5.986 ; Fall       ; key[0]          ;
;  hex0[3]  ; key[0]          ; 5.128 ; 5.128 ; Fall       ; key[0]          ;
;  hex0[4]  ; key[0]          ; 4.742 ; 4.742 ; Fall       ; key[0]          ;
;  hex0[5]  ; key[0]          ; 5.547 ; 5.547 ; Fall       ; key[0]          ;
;  hex0[6]  ; key[0]          ; 5.940 ; 5.940 ; Fall       ; key[0]          ;
; hex1[*]   ; key[0]          ; 4.672 ; 4.672 ; Fall       ; key[0]          ;
;  hex1[0]  ; key[0]          ; 5.869 ; 5.869 ; Fall       ; key[0]          ;
;  hex1[1]  ; key[0]          ; 4.672 ; 4.672 ; Fall       ; key[0]          ;
;  hex1[2]  ; key[0]          ; 5.824 ; 5.824 ; Fall       ; key[0]          ;
;  hex1[3]  ; key[0]          ; 5.834 ; 5.834 ; Fall       ; key[0]          ;
;  hex1[4]  ; key[0]          ; 4.692 ; 4.692 ; Fall       ; key[0]          ;
;  hex1[5]  ; key[0]          ; 5.854 ; 5.854 ; Fall       ; key[0]          ;
;  hex1[6]  ; key[0]          ; 5.854 ; 5.854 ; Fall       ; key[0]          ;
; hex2[*]   ; key[0]          ; 4.532 ; 4.532 ; Fall       ; key[0]          ;
;  hex2[0]  ; key[0]          ; 5.814 ; 5.814 ; Fall       ; key[0]          ;
;  hex2[1]  ; key[0]          ; 5.800 ; 5.800 ; Fall       ; key[0]          ;
;  hex2[2]  ; key[0]          ; 5.840 ; 5.840 ; Fall       ; key[0]          ;
;  hex2[3]  ; key[0]          ; 5.840 ; 5.840 ; Fall       ; key[0]          ;
;  hex2[4]  ; key[0]          ; 5.686 ; 5.686 ; Fall       ; key[0]          ;
;  hex2[5]  ; key[0]          ; 5.676 ; 5.676 ; Fall       ; key[0]          ;
;  hex2[6]  ; key[0]          ; 4.532 ; 4.532 ; Fall       ; key[0]          ;
; hex3[*]   ; key[0]          ; 4.991 ; 4.991 ; Fall       ; key[0]          ;
;  hex3[0]  ; key[0]          ; 5.209 ; 5.209 ; Fall       ; key[0]          ;
;  hex3[1]  ; key[0]          ; 5.336 ; 5.336 ; Fall       ; key[0]          ;
;  hex3[2]  ; key[0]          ; 5.226 ; 5.226 ; Fall       ; key[0]          ;
;  hex3[3]  ; key[0]          ; 5.123 ; 5.123 ; Fall       ; key[0]          ;
;  hex3[6]  ; key[0]          ; 4.991 ; 4.991 ; Fall       ; key[0]          ;
+-----------+-----------------+-------+-------+------------+-----------------+


+-----------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                               ;
+------------------+----------+----------+----------+---------+---------------------+
; Clock            ; Setup    ; Hold     ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+----------+----------+----------+---------+---------------------+
; Worst-case Slack ; -4.119   ; -4.108   ; N/A      ; N/A     ; -1.469              ;
;  current_state.A ; -2.523   ; -4.108   ; N/A      ; N/A     ; 0.500               ;
;  key[0]          ; -4.119   ; -2.406   ; N/A      ; N/A     ; -1.469              ;
; Design-wide TNS  ; -412.035 ; -137.634 ; 0.0      ; 0.0     ; -149.331            ;
;  current_state.A ; -19.473  ; -29.505  ; N/A      ; N/A     ; 0.000               ;
;  key[0]          ; -392.562 ; -108.129 ; N/A      ; N/A     ; -149.331            ;
+------------------+----------+----------+----------+---------+---------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; key[*]    ; key[0]     ; 6.909 ; 6.909 ; Fall       ; key[0]          ;
;  key[1]   ; key[0]     ; 6.909 ; 6.909 ; Fall       ; key[0]          ;
; sw[*]     ; key[0]     ; 4.863 ; 4.863 ; Fall       ; key[0]          ;
;  sw[0]    ; key[0]     ; 4.075 ; 4.075 ; Fall       ; key[0]          ;
;  sw[1]    ; key[0]     ; 4.178 ; 4.178 ; Fall       ; key[0]          ;
;  sw[2]    ; key[0]     ; 4.551 ; 4.551 ; Fall       ; key[0]          ;
;  sw[3]    ; key[0]     ; 4.863 ; 4.863 ; Fall       ; key[0]          ;
;  sw[4]    ; key[0]     ; 4.381 ; 4.381 ; Fall       ; key[0]          ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; key[*]    ; key[0]     ; -1.885 ; -1.885 ; Fall       ; key[0]          ;
;  key[1]   ; key[0]     ; -1.885 ; -1.885 ; Fall       ; key[0]          ;
; sw[*]     ; key[0]     ; 0.259  ; 0.259  ; Fall       ; key[0]          ;
;  sw[0]    ; key[0]     ; 0.259  ; 0.259  ; Fall       ; key[0]          ;
;  sw[1]    ; key[0]     ; 0.205  ; 0.205  ; Fall       ; key[0]          ;
;  sw[2]    ; key[0]     ; 0.041  ; 0.041  ; Fall       ; key[0]          ;
;  sw[3]    ; key[0]     ; -0.114 ; -0.114 ; Fall       ; key[0]          ;
;  sw[4]    ; key[0]     ; -0.593 ; -0.593 ; Fall       ; key[0]          ;
+-----------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Clock to Output Times                                                        ;
+-----------+-----------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port      ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+-----------------+--------+--------+------------+-----------------+
; hex0[*]   ; current_state.A ; 9.981  ;        ; Rise       ; current_state.A ;
;  hex0[0]  ; current_state.A ; 8.548  ;        ; Rise       ; current_state.A ;
;  hex0[1]  ; current_state.A ; 8.387  ;        ; Rise       ; current_state.A ;
;  hex0[2]  ; current_state.A ; 9.789  ;        ; Rise       ; current_state.A ;
;  hex0[3]  ; current_state.A ; 8.497  ;        ; Rise       ; current_state.A ;
;  hex0[4]  ; current_state.A ; 7.387  ;        ; Rise       ; current_state.A ;
;  hex0[5]  ; current_state.A ; 8.956  ;        ; Rise       ; current_state.A ;
;  hex0[6]  ; current_state.A ; 9.981  ;        ; Rise       ; current_state.A ;
; hex1[*]   ; current_state.A ; 9.954  ;        ; Rise       ; current_state.A ;
;  hex1[0]  ; current_state.A ; 9.954  ;        ; Rise       ; current_state.A ;
;  hex1[2]  ; current_state.A ; 9.908  ;        ; Rise       ; current_state.A ;
;  hex1[3]  ; current_state.A ; 9.918  ;        ; Rise       ; current_state.A ;
;  hex1[5]  ; current_state.A ; 9.937  ;        ; Rise       ; current_state.A ;
;  hex1[6]  ; current_state.A ; 9.937  ;        ; Rise       ; current_state.A ;
; hex2[*]   ; current_state.A ; 9.920  ;        ; Rise       ; current_state.A ;
;  hex2[0]  ; current_state.A ; 9.897  ;        ; Rise       ; current_state.A ;
;  hex2[1]  ; current_state.A ; 9.880  ;        ; Rise       ; current_state.A ;
;  hex2[2]  ; current_state.A ; 9.920  ;        ; Rise       ; current_state.A ;
;  hex2[3]  ; current_state.A ; 9.920  ;        ; Rise       ; current_state.A ;
;  hex2[4]  ; current_state.A ; 9.549  ;        ; Rise       ; current_state.A ;
;  hex2[5]  ; current_state.A ; 9.539  ;        ; Rise       ; current_state.A ;
; ledg[*]   ; current_state.A ; 10.194 ; 10.194 ; Rise       ; current_state.A ;
;  ledg[0]  ; current_state.A ; 10.027 ; 10.027 ; Rise       ; current_state.A ;
;  ledg[1]  ; current_state.A ; 9.989  ; 9.989  ; Rise       ; current_state.A ;
;  ledg[2]  ; current_state.A ; 9.983  ; 9.983  ; Rise       ; current_state.A ;
;  ledg[3]  ; current_state.A ; 10.169 ; 10.169 ; Rise       ; current_state.A ;
;  ledg[4]  ; current_state.A ; 10.189 ; 10.189 ; Rise       ; current_state.A ;
;  ledg[5]  ; current_state.A ; 10.194 ; 10.194 ; Rise       ; current_state.A ;
;  ledg[6]  ; current_state.A ; 10.189 ; 10.189 ; Rise       ; current_state.A ;
;  ledg[7]  ; current_state.A ; 10.189 ; 10.189 ; Rise       ; current_state.A ;
;  ledg[8]  ; current_state.A ; 10.169 ; 10.169 ; Rise       ; current_state.A ;
;  ledg[9]  ; current_state.A ; 9.403  ; 9.403  ; Rise       ; current_state.A ;
; ledr[*]   ; current_state.A ; 11.128 ; 11.128 ; Rise       ; current_state.A ;
;  ledr[0]  ; current_state.A ; 10.751 ; 10.751 ; Rise       ; current_state.A ;
;  ledr[1]  ; current_state.A ; 10.708 ; 10.708 ; Rise       ; current_state.A ;
;  ledr[2]  ; current_state.A ; 10.819 ; 10.819 ; Rise       ; current_state.A ;
;  ledr[3]  ; current_state.A ; 10.679 ; 10.679 ; Rise       ; current_state.A ;
;  ledr[4]  ; current_state.A ; 10.892 ; 10.892 ; Rise       ; current_state.A ;
;  ledr[5]  ; current_state.A ; 11.128 ; 11.128 ; Rise       ; current_state.A ;
;  ledr[6]  ; current_state.A ; 10.515 ; 10.515 ; Rise       ; current_state.A ;
;  ledr[7]  ; current_state.A ; 10.706 ; 10.706 ; Rise       ; current_state.A ;
;  ledr[8]  ; current_state.A ; 10.505 ; 10.505 ; Rise       ; current_state.A ;
;  ledr[9]  ; current_state.A ; 10.454 ; 10.454 ; Rise       ; current_state.A ;
; hex0[*]   ; current_state.A ;        ; 9.981  ; Fall       ; current_state.A ;
;  hex0[0]  ; current_state.A ;        ; 8.548  ; Fall       ; current_state.A ;
;  hex0[1]  ; current_state.A ;        ; 8.387  ; Fall       ; current_state.A ;
;  hex0[2]  ; current_state.A ;        ; 9.789  ; Fall       ; current_state.A ;
;  hex0[3]  ; current_state.A ;        ; 8.497  ; Fall       ; current_state.A ;
;  hex0[4]  ; current_state.A ;        ; 7.387  ; Fall       ; current_state.A ;
;  hex0[5]  ; current_state.A ;        ; 8.956  ; Fall       ; current_state.A ;
;  hex0[6]  ; current_state.A ;        ; 9.981  ; Fall       ; current_state.A ;
; hex1[*]   ; current_state.A ;        ; 9.954  ; Fall       ; current_state.A ;
;  hex1[0]  ; current_state.A ;        ; 9.954  ; Fall       ; current_state.A ;
;  hex1[2]  ; current_state.A ;        ; 9.908  ; Fall       ; current_state.A ;
;  hex1[3]  ; current_state.A ;        ; 9.918  ; Fall       ; current_state.A ;
;  hex1[5]  ; current_state.A ;        ; 9.937  ; Fall       ; current_state.A ;
;  hex1[6]  ; current_state.A ;        ; 9.937  ; Fall       ; current_state.A ;
; hex2[*]   ; current_state.A ;        ; 9.920  ; Fall       ; current_state.A ;
;  hex2[0]  ; current_state.A ;        ; 9.897  ; Fall       ; current_state.A ;
;  hex2[1]  ; current_state.A ;        ; 9.880  ; Fall       ; current_state.A ;
;  hex2[2]  ; current_state.A ;        ; 9.920  ; Fall       ; current_state.A ;
;  hex2[3]  ; current_state.A ;        ; 9.920  ; Fall       ; current_state.A ;
;  hex2[4]  ; current_state.A ;        ; 9.549  ; Fall       ; current_state.A ;
;  hex2[5]  ; current_state.A ;        ; 9.539  ; Fall       ; current_state.A ;
; hex0[*]   ; key[0]          ; 17.142 ; 17.142 ; Fall       ; key[0]          ;
;  hex0[0]  ; key[0]          ; 15.670 ; 15.670 ; Fall       ; key[0]          ;
;  hex0[1]  ; key[0]          ; 15.517 ; 15.517 ; Fall       ; key[0]          ;
;  hex0[2]  ; key[0]          ; 16.787 ; 16.787 ; Fall       ; key[0]          ;
;  hex0[3]  ; key[0]          ; 15.619 ; 15.619 ; Fall       ; key[0]          ;
;  hex0[4]  ; key[0]          ; 15.257 ; 15.257 ; Fall       ; key[0]          ;
;  hex0[5]  ; key[0]          ; 16.117 ; 16.117 ; Fall       ; key[0]          ;
;  hex0[6]  ; key[0]          ; 17.142 ; 17.142 ; Fall       ; key[0]          ;
; hex1[*]   ; key[0]          ; 13.557 ; 13.557 ; Fall       ; key[0]          ;
;  hex1[0]  ; key[0]          ; 13.557 ; 13.557 ; Fall       ; key[0]          ;
;  hex1[1]  ; key[0]          ; 10.083 ; 10.083 ; Fall       ; key[0]          ;
;  hex1[2]  ; key[0]          ; 13.511 ; 13.511 ; Fall       ; key[0]          ;
;  hex1[3]  ; key[0]          ; 13.521 ; 13.521 ; Fall       ; key[0]          ;
;  hex1[4]  ; key[0]          ; 10.103 ; 10.103 ; Fall       ; key[0]          ;
;  hex1[5]  ; key[0]          ; 13.540 ; 13.540 ; Fall       ; key[0]          ;
;  hex1[6]  ; key[0]          ; 13.540 ; 13.540 ; Fall       ; key[0]          ;
; hex2[*]   ; key[0]          ; 13.523 ; 13.523 ; Fall       ; key[0]          ;
;  hex2[0]  ; key[0]          ; 13.500 ; 13.500 ; Fall       ; key[0]          ;
;  hex2[1]  ; key[0]          ; 13.483 ; 13.483 ; Fall       ; key[0]          ;
;  hex2[2]  ; key[0]          ; 13.523 ; 13.523 ; Fall       ; key[0]          ;
;  hex2[3]  ; key[0]          ; 13.523 ; 13.523 ; Fall       ; key[0]          ;
;  hex2[4]  ; key[0]          ; 13.152 ; 13.152 ; Fall       ; key[0]          ;
;  hex2[5]  ; key[0]          ; 13.142 ; 13.142 ; Fall       ; key[0]          ;
;  hex2[6]  ; key[0]          ; 9.727  ; 9.727  ; Fall       ; key[0]          ;
; hex3[*]   ; key[0]          ; 12.361 ; 12.361 ; Fall       ; key[0]          ;
;  hex3[0]  ; key[0]          ; 11.298 ; 11.298 ; Fall       ; key[0]          ;
;  hex3[1]  ; key[0]          ; 11.469 ; 11.469 ; Fall       ; key[0]          ;
;  hex3[2]  ; key[0]          ; 11.864 ; 11.864 ; Fall       ; key[0]          ;
;  hex3[3]  ; key[0]          ; 12.361 ; 12.361 ; Fall       ; key[0]          ;
;  hex3[6]  ; key[0]          ; 10.706 ; 10.706 ; Fall       ; key[0]          ;
+-----------+-----------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------+
; Minimum Clock to Output Times                                              ;
+-----------+-----------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port      ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+-----------------+-------+-------+------------+-----------------+
; hex0[*]   ; current_state.A ; 3.261 ;       ; Rise       ; current_state.A ;
;  hex0[0]  ; current_state.A ; 3.737 ;       ; Rise       ; current_state.A ;
;  hex0[1]  ; current_state.A ; 3.579 ;       ; Rise       ; current_state.A ;
;  hex0[2]  ; current_state.A ; 4.323 ;       ; Rise       ; current_state.A ;
;  hex0[3]  ; current_state.A ; 3.698 ;       ; Rise       ; current_state.A ;
;  hex0[4]  ; current_state.A ; 3.261 ;       ; Rise       ; current_state.A ;
;  hex0[5]  ; current_state.A ; 3.952 ;       ; Rise       ; current_state.A ;
;  hex0[6]  ; current_state.A ; 4.345 ;       ; Rise       ; current_state.A ;
; hex1[*]   ; current_state.A ; 4.136 ;       ; Rise       ; current_state.A ;
;  hex1[0]  ; current_state.A ; 4.181 ;       ; Rise       ; current_state.A ;
;  hex1[2]  ; current_state.A ; 4.136 ;       ; Rise       ; current_state.A ;
;  hex1[3]  ; current_state.A ; 4.146 ;       ; Rise       ; current_state.A ;
;  hex1[5]  ; current_state.A ; 4.166 ;       ; Rise       ; current_state.A ;
;  hex1[6]  ; current_state.A ; 4.166 ;       ; Rise       ; current_state.A ;
; hex2[*]   ; current_state.A ; 3.988 ;       ; Rise       ; current_state.A ;
;  hex2[0]  ; current_state.A ; 4.126 ;       ; Rise       ; current_state.A ;
;  hex2[1]  ; current_state.A ; 4.112 ;       ; Rise       ; current_state.A ;
;  hex2[2]  ; current_state.A ; 4.152 ;       ; Rise       ; current_state.A ;
;  hex2[3]  ; current_state.A ; 4.152 ;       ; Rise       ; current_state.A ;
;  hex2[4]  ; current_state.A ; 3.998 ;       ; Rise       ; current_state.A ;
;  hex2[5]  ; current_state.A ; 3.988 ;       ; Rise       ; current_state.A ;
; ledg[*]   ; current_state.A ; 4.434 ; 4.434 ; Rise       ; current_state.A ;
;  ledg[0]  ; current_state.A ; 4.707 ; 4.707 ; Rise       ; current_state.A ;
;  ledg[1]  ; current_state.A ; 4.686 ; 4.686 ; Rise       ; current_state.A ;
;  ledg[2]  ; current_state.A ; 4.680 ; 4.680 ; Rise       ; current_state.A ;
;  ledg[3]  ; current_state.A ; 4.765 ; 4.765 ; Rise       ; current_state.A ;
;  ledg[4]  ; current_state.A ; 4.783 ; 4.783 ; Rise       ; current_state.A ;
;  ledg[5]  ; current_state.A ; 4.788 ; 4.788 ; Rise       ; current_state.A ;
;  ledg[6]  ; current_state.A ; 4.785 ; 4.785 ; Rise       ; current_state.A ;
;  ledg[7]  ; current_state.A ; 4.785 ; 4.785 ; Rise       ; current_state.A ;
;  ledg[8]  ; current_state.A ; 4.763 ; 4.763 ; Rise       ; current_state.A ;
;  ledg[9]  ; current_state.A ; 4.434 ; 4.434 ; Rise       ; current_state.A ;
; ledr[*]   ; current_state.A ; 4.782 ; 4.782 ; Rise       ; current_state.A ;
;  ledr[0]  ; current_state.A ; 4.916 ; 4.916 ; Rise       ; current_state.A ;
;  ledr[1]  ; current_state.A ; 4.882 ; 4.882 ; Rise       ; current_state.A ;
;  ledr[2]  ; current_state.A ; 4.959 ; 4.959 ; Rise       ; current_state.A ;
;  ledr[3]  ; current_state.A ; 4.905 ; 4.905 ; Rise       ; current_state.A ;
;  ledr[4]  ; current_state.A ; 5.020 ; 5.020 ; Rise       ; current_state.A ;
;  ledr[5]  ; current_state.A ; 5.075 ; 5.075 ; Rise       ; current_state.A ;
;  ledr[6]  ; current_state.A ; 4.841 ; 4.841 ; Rise       ; current_state.A ;
;  ledr[7]  ; current_state.A ; 4.972 ; 4.972 ; Rise       ; current_state.A ;
;  ledr[8]  ; current_state.A ; 4.821 ; 4.821 ; Rise       ; current_state.A ;
;  ledr[9]  ; current_state.A ; 4.782 ; 4.782 ; Rise       ; current_state.A ;
; hex0[*]   ; current_state.A ;       ; 3.261 ; Fall       ; current_state.A ;
;  hex0[0]  ; current_state.A ;       ; 3.737 ; Fall       ; current_state.A ;
;  hex0[1]  ; current_state.A ;       ; 3.579 ; Fall       ; current_state.A ;
;  hex0[2]  ; current_state.A ;       ; 4.323 ; Fall       ; current_state.A ;
;  hex0[3]  ; current_state.A ;       ; 3.698 ; Fall       ; current_state.A ;
;  hex0[4]  ; current_state.A ;       ; 3.261 ; Fall       ; current_state.A ;
;  hex0[5]  ; current_state.A ;       ; 3.952 ; Fall       ; current_state.A ;
;  hex0[6]  ; current_state.A ;       ; 4.345 ; Fall       ; current_state.A ;
; hex1[*]   ; current_state.A ;       ; 4.136 ; Fall       ; current_state.A ;
;  hex1[0]  ; current_state.A ;       ; 4.181 ; Fall       ; current_state.A ;
;  hex1[2]  ; current_state.A ;       ; 4.136 ; Fall       ; current_state.A ;
;  hex1[3]  ; current_state.A ;       ; 4.146 ; Fall       ; current_state.A ;
;  hex1[5]  ; current_state.A ;       ; 4.166 ; Fall       ; current_state.A ;
;  hex1[6]  ; current_state.A ;       ; 4.166 ; Fall       ; current_state.A ;
; hex2[*]   ; current_state.A ;       ; 3.988 ; Fall       ; current_state.A ;
;  hex2[0]  ; current_state.A ;       ; 4.126 ; Fall       ; current_state.A ;
;  hex2[1]  ; current_state.A ;       ; 4.112 ; Fall       ; current_state.A ;
;  hex2[2]  ; current_state.A ;       ; 4.152 ; Fall       ; current_state.A ;
;  hex2[3]  ; current_state.A ;       ; 4.152 ; Fall       ; current_state.A ;
;  hex2[4]  ; current_state.A ;       ; 3.998 ; Fall       ; current_state.A ;
;  hex2[5]  ; current_state.A ;       ; 3.988 ; Fall       ; current_state.A ;
; hex0[*]   ; key[0]          ; 4.742 ; 4.742 ; Fall       ; key[0]          ;
;  hex0[0]  ; key[0]          ; 5.332 ; 5.332 ; Fall       ; key[0]          ;
;  hex0[1]  ; key[0]          ; 4.992 ; 4.992 ; Fall       ; key[0]          ;
;  hex0[2]  ; key[0]          ; 5.986 ; 5.986 ; Fall       ; key[0]          ;
;  hex0[3]  ; key[0]          ; 5.128 ; 5.128 ; Fall       ; key[0]          ;
;  hex0[4]  ; key[0]          ; 4.742 ; 4.742 ; Fall       ; key[0]          ;
;  hex0[5]  ; key[0]          ; 5.547 ; 5.547 ; Fall       ; key[0]          ;
;  hex0[6]  ; key[0]          ; 5.940 ; 5.940 ; Fall       ; key[0]          ;
; hex1[*]   ; key[0]          ; 4.672 ; 4.672 ; Fall       ; key[0]          ;
;  hex1[0]  ; key[0]          ; 5.869 ; 5.869 ; Fall       ; key[0]          ;
;  hex1[1]  ; key[0]          ; 4.672 ; 4.672 ; Fall       ; key[0]          ;
;  hex1[2]  ; key[0]          ; 5.824 ; 5.824 ; Fall       ; key[0]          ;
;  hex1[3]  ; key[0]          ; 5.834 ; 5.834 ; Fall       ; key[0]          ;
;  hex1[4]  ; key[0]          ; 4.692 ; 4.692 ; Fall       ; key[0]          ;
;  hex1[5]  ; key[0]          ; 5.854 ; 5.854 ; Fall       ; key[0]          ;
;  hex1[6]  ; key[0]          ; 5.854 ; 5.854 ; Fall       ; key[0]          ;
; hex2[*]   ; key[0]          ; 4.532 ; 4.532 ; Fall       ; key[0]          ;
;  hex2[0]  ; key[0]          ; 5.814 ; 5.814 ; Fall       ; key[0]          ;
;  hex2[1]  ; key[0]          ; 5.800 ; 5.800 ; Fall       ; key[0]          ;
;  hex2[2]  ; key[0]          ; 5.840 ; 5.840 ; Fall       ; key[0]          ;
;  hex2[3]  ; key[0]          ; 5.840 ; 5.840 ; Fall       ; key[0]          ;
;  hex2[4]  ; key[0]          ; 5.686 ; 5.686 ; Fall       ; key[0]          ;
;  hex2[5]  ; key[0]          ; 5.676 ; 5.676 ; Fall       ; key[0]          ;
;  hex2[6]  ; key[0]          ; 4.532 ; 4.532 ; Fall       ; key[0]          ;
; hex3[*]   ; key[0]          ; 4.991 ; 4.991 ; Fall       ; key[0]          ;
;  hex3[0]  ; key[0]          ; 5.209 ; 5.209 ; Fall       ; key[0]          ;
;  hex3[1]  ; key[0]          ; 5.336 ; 5.336 ; Fall       ; key[0]          ;
;  hex3[2]  ; key[0]          ; 5.226 ; 5.226 ; Fall       ; key[0]          ;
;  hex3[3]  ; key[0]          ; 5.123 ; 5.123 ; Fall       ; key[0]          ;
;  hex3[6]  ; key[0]          ; 4.991 ; 4.991 ; Fall       ; key[0]          ;
+-----------+-----------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Setup Transfers                                                               ;
+-----------------+-----------------+----------+----------+----------+----------+
; From Clock      ; To Clock        ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-----------------+-----------------+----------+----------+----------+----------+
; current_state.A ; current_state.A ; 9        ; 9        ; 0        ; 0        ;
; key[0]          ; current_state.A ; 0        ; 650      ; 0        ; 0        ;
; current_state.A ; key[0]          ; 0        ; 0        ; 101      ; 101      ;
; key[0]          ; key[0]          ; 0        ; 0        ; 0        ; 3313     ;
+-----------------+-----------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------------------+
; Hold Transfers                                                                ;
+-----------------+-----------------+----------+----------+----------+----------+
; From Clock      ; To Clock        ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+-----------------+-----------------+----------+----------+----------+----------+
; current_state.A ; current_state.A ; 9        ; 9        ; 0        ; 0        ;
; key[0]          ; current_state.A ; 0        ; 650      ; 0        ; 0        ;
; current_state.A ; key[0]          ; 0        ; 0        ; 101      ; 101      ;
; key[0]          ; key[0]          ; 0        ; 0        ; 0        ; 3313     ;
+-----------------+-----------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 6     ; 6    ;
; Unconstrained Input Port Paths  ; 471   ; 471  ;
; Unconstrained Output Ports      ; 46    ; 46   ;
; Unconstrained Output Port Paths ; 294   ; 294  ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.0 Build 156 04/24/2013 SJ Web Edition
    Info: Processing started: Tue Dec 12 16:35:09 2023
Info: Command: quartus_sta naval_battle -c naval_battle
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Warning (335093): TimeQuest Timing Analyzer is analyzing 11 combinational loops as latches.
Critical Warning (332012): Synopsys Design Constraints File file not found: 'naval_battle.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name key[0] key[0]
    Info (332105): create_clock -period 1.000 -name current_state.A current_state.A
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -4.119
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -4.119      -392.562 key[0] 
    Info (332119):    -2.523       -19.473 current_state.A 
Info (332146): Worst-case hold slack is -4.108
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -4.108       -29.505 current_state.A 
    Info (332119):    -2.406      -108.129 key[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.469
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.469      -149.331 key[0] 
    Info (332119):     0.500         0.000 current_state.A 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.029
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.029       -84.075 key[0] 
    Info (332119):    -0.342        -2.146 current_state.A 
Info (332146): Worst-case hold slack is -2.134
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.134       -15.911 current_state.A 
    Info (332119):    -1.199       -67.211 key[0] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.222
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.222      -122.222 key[0] 
    Info (332119):     0.500         0.000 current_state.A 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 5 warnings
    Info: Peak virtual memory: 4551 megabytes
    Info: Processing ended: Tue Dec 12 16:35:10 2023
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:01


